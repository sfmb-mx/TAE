#+TITLE:     Kaggle Competition
#+AUTHOR:    Sergio-Feliciano Mendoza-Barrera
#+DRAWERS:    sfmb
#+EMAIL:     smendoza.barrera@gmail.com
#+DATE:     20/07/2015
#+DESCRIPTION:  The Analytics Edge Kaggle competition
#+KEYWORDS:   R, data science, emacs, ESS, org-mode, kaggle, competition
#+LANGUAGE:   en
#+OPTIONS:    H:10 num:t toc:nil \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t d:HIDDEN
#+OPTIONS:    TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS:    LaTeX:dvipng
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:
#+STYLE: <link rel="stylesheet" type="text/css" href="dft.css"/>

#+LaTeX_CLASS: IEEEtran
#+LATEX_CLASS_OPTIONS: [letterpaper, 9pt, onecolumn, twoside, technote, final]
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage{makeidx}

#+LATEX_HEADER: \usepackage[lining,tabular]{fbb} % so math uses tabular lining figures
#+LATEX_HEADER: \usepackage[scaled=.95,type1]{cabin} % sans serif in style of Gill Sans
#+LATEX_HEADER: \usepackage[varqu,varl]{zi4}% inconsolata typewriter
#+LATEX_HEADER: \usepackage[T1]{fontenc} % LY1 also works
#+LATEX_HEADER: \usepackage[libertine,bigdelims]{newtxmath}
#+LATEX_HEADER: \usepackage[cal=boondoxo,bb=boondox,frak=boondox]{mathalfa}
#+LATEX_HEADER: \useosf % change normal text to use proportional oldstyle figures

#+LATEX_HEADER: \markboth{Kaggle competition, July 2015.}%
#+LATEX_HEADER: {Sergio-Feliciano Mendoza-Barrera}

#+LATEX_HEADER: \newcommand{\degC}{$^\circ$C{}}

#+STYLE: <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"> </script>

#+ATTR_HTML: width="500px"

# -*- mode: org; -*-
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/bigblow/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/bigblow/css/bigblow.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/bigblow/css/hideshow.css"/>

#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/jquery-1.11.0.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/jquery-ui-1.10.2.min.js"></script>

#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/jquery.localscroll-min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/jquery.scrollTo-1.4.3.1-min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/jquery.zclip.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/bigblow.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/bigblow/js/hideshow.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.min.js"></script>

#+BEGIN_ABSTRACT
This is the document for the Kaggle competition for the Analytics Edge
course from MIT.
#+END_ABSTRACT

* Introduction

** Welcome to the Kaggle Competition!

For the next three weeks, you will be participating in a competition
on Kaggle. You should have already set up a Kaggle account (this was
the last component of Unit 6). When the competition is over, you will
be able to check your grade on the competition by going to your
Progress page.

We have created two R script files to help you get started on this
competition. The first script (on the next page), is intended to help
you get started by building a simple logistic regression model and
preparing the results for submission on Kaggle. The second script (on
the following page), is designed to help you deal with the text data
provided in this competition. We highly recommend that you carefully
go through both of these script files, and refer to them during the
competition.

If you get stuck or have questions, please use the Discussion forum on
the edX site for this class. Remember though that the standard
discussion forum rules apply. You should not ask for answers or give
any answers on the forum.

Once you are ready, go ahead and get started by heading to the
[[https://kaggle.com/join/15071xtheanalyticsedgesummer2015][competition page]] on Kaggle. Note that this competition is a private
competition only for students in 15.071x. Please do not distribute
this link to people who are not enrolled in this class.

Good luck!

** Getting started on Kaggle

If you have never participated in a Kaggle competition before, or if
you just want some help getting started, we have created [[https://courses.edx.org/asset-v1:MITx%2B15.071x_2a%2B2T2015%2Btype@asset%2Bblock/KCompetition_GettingStarted.R][this R script]]
file to help you get started. It shows you how to prepare a submission
file for a simple logistic regression model, and how to get the most
out of the date/time variable in the dataset.

Before going through the script file, please explore the Kaggle
competition by following the link on the previous page. There are
several very important pages in the competition:

- The "*Data*" page of the competition describes the data and gives
 you links to download the data.

- The "*Evaluation*" page is where you will learn how the competition
 is graded and how to make submissions.

- The "*Rules*" page outlines some very important rules for the
 competition. Please keep in mind that all of your submissions should
 reflect the results of your own analytical models, built using the
 data provided on the Kaggle site. While you can use the discussion
 forum to ask questions and get help, the standard rules
 apply. Please do not ask for or give solutions to the
 competition. We will be checking submissions for signs of copying,
 either from your classmates or from outside sources.

- When you are ready to make a submission, the "*Make a Submission*"
 page is where you can submit your solution. Note that you can make
 up to 5 submissions each day, so don't hesitate to get creative and
 try out many different models!

If you have questions about the logistics of the competition, or need
help understanding the provided script file, please go to the
Discussion forum by using the link below.

Remember that this script file is just designed to help you get
started. You will need to build better models to do well in the
competition!

** Dealing with the text data

The data for this competition has a few variables composed of
unstructured text data. You should be comfortable using the *bag of
words* approach on text data from Unit 5, and we want to encourage you
to use this data to improve your predictive models. However, you need
to deal with the text data for this competition in a slightly
different way from how we have dealt with text data in the past,
because it is already split into a training set and a test set.

This [[https://courses.edx.org/asset-v1:MITx%2B15.071x_2a%2B2T2015%2Btype@asset%2Bblock/KCompetition_TextData.R][R script file]] is designed to help you get started working with
some the text data provided in the eBay dataset. If you have any
questions about the approach used in the script file, please go to the
Dicussion forum to get help by following the link below.

Remember that this script file is just designed to help you get
started. You will need to build better models to do well in the
competition!

* Test your analytics skills by predicting which iPads listed on eBay will be sold

*IMPORTANT NOTE*: This competition is only open to students of the
MITx free, online course 15.071x - The Analytics Edge.

*What makes an eBay listing successful?*

Sellers on online auction websites need to understand the
characteristics of a successful item listing to maximize their
revenue. Buyers might also be interested in understanding which
listings are less attractive so as to score a good deal. In this
competition, we challenge you to develop an analytics model that will
help buyers and sellers predict the sales success of a set of eBay
listings for Apple iPads from spring 2015.

The following screenshot shows an example of iPad listings on eBay:

[[../graphs/ScreenshotEbay.png]]

To download the data and learn how this competition works, please be
sure to read the "Data" page, as well as the "Evaluation" page, which
can both be found in the panel on the left.

** Acknowledgments

This competition is brought to you by MITx and edX.

* 15.071x - The Analytics Edge (Summer 2015)

** Download the data sets

In this part we can download the data

#+BEGIN_SRC R :session :results output :exports all
  library(parallel)

  if(!file.exists("../data")) {
          dir.create("../data")
  }

  fileUrl <-
  c("https://inclass.kaggle.com/c/15-071x-the-analytics-edge-summer-2015/download/eBayiPadTest.csv",
  "https://inclass.kaggle.com/c/15-071x-the-analytics-edge-summer-2015/download/eBayiPadTrain.csv",
  "https://inclass.kaggle.com/c/15-071x-the-analytics-edge-summer-2015/download/SampleSubmission.csv")

  fileName <- c("eBayiPadTest.csv", "eBayiPadTrain.csv", "SampleSubmission.csv")

  dataPath <- "../data"

  for(i in 1:3) {
          filePath <- paste(dataPath, fileName[i], sep = "/")

          if(!file.exists(filePath)) {
                  download.file(fileUrl[i], destfile = filePath, method = "curl")
          }
  }
  list.files("../data")
#+END_SRC

#+RESULTS:
#+begin_example
 [1] "AirlinesCluster.csv"     "AnonymityPoll.csv"
 [3] "baseball.csv"            "BoeingStock.csv"
 [5] "boston.csv"              "ClaimsData.csv"
 [7] "ClaimsData.csv.zip"      "climate_change.csv"
 [9] "clinical_trial.csv"      "ClusterMeans.ods"
[11] "CocaColaStock.csv"       "CountryCodes.csv"
[13] "CPSData.csv"             "dailykos.csv"
[15] "eBayiPadTest.csv"        "eBayiPadTrain.csv"
[17] "emails.csv"              "energy_bids.csv"
[19] "flower.csv"              "FluTest.csv"
[21] "FluTrain.csv"            "framingham.csv"
[23] "gerber.csv"              "GEStock.csv"
[25] "healthy.csv"             "IBMStock.csv"
[27] "loans_imputed.csv"       "loans.csv"
[29] "MetroAreaCodes.csv"      "movieLens.txt"
[31] "mvtWeek1.csv"            "NBA_test.csv"
[33] "NBA_train.csv"           "parole.csv"
[35] "pisa2009test.csv"        "pisa2009train.csv"
[37] "PollingData_Imputed.csv" "PollingData.csv"
[39] "ProcterGambleStock.csv"  "quality.csv"
[41] "README.md"               "SampleSubmission.csv"
[43] "songs.csv"               "stevens.csv"
[45] "StocksCluster.csv"       "stopwords.txt"
[47] "tumor.csv"               "tweets.csv"
[49] "USDA.csv"                "WHO_Europe.csv"
[51] "WHO.csv"                 "wiki.csv"
[53] "wine_test.csv"           "wine.csv"
#+end_example

** File descriptions

The data provided for this competition is split into two files:

- *eBayiPadTrain.csv* = the training data set. It consists of 1861 listings.

- *eBayiPadTest.csv* = the testing data set. It consists of 798 listings.

- We have also provided a sample submission file,
  *SampleSubmission.csv*. This file gives an example of the format of
  submission files (see the Evaluation page for more information). The
  data for this competition comes from eBay.com.

** Data fields

The dependent variable in this problem is the variable sold, which
labels if an iPad listed on the eBay site was sold (equal to 1 if it
did, and 0 if it did not). The dependent variable is provided in the
training data set, but not the testing dataset. This is an important
difference from what you are used to - you will not be able to see how
well your model does on the test set until you make a submission on
Kaggle.

The independent variables consist of 9 pieces of product data
available at the time the iPad listing is posted, and a unique
identifier:

- *description* = The text description of the product provided by the
  seller.

- *biddable* = Whether this is an auction (biddable=1) or a sale with
  a fixed price (biddable=0).

- *startprice* = The start price (in US Dollars) for the auction (if
  biddable=1) or the sale price (if biddable=0).

- *condition* = The condition of the product (new, used, etc.)

- *cellular* = Whether the iPad has cellular connectivity (cellular=1)
  or not (cellular=0).

- *carrier* = The cellular carrier for which the iPad is equipped (if
  cellular=1); listed as "None" if cellular=0.

- *color* = The color of the iPad.

- *storage* = The iPad's storage capacity (in gigabytes).

- *productline* = The name of the product being sold.

** Load the data set

#+BEGIN_SRC R :session :results output :exports all
  writeLines("    Loading data set into their data frame...")
  ## eBayiPadTrain <- read.table("../data/eBayiPadTrain.csv", sep = ",", header = TRUE)
  eBayiPadTrain <- read.csv("../data/eBayiPadTrain.csv", colClasses = "character",
                   na.strings = c("", "Unknown", NULL))

  str(eBayiPadTrain)
#+END_SRC

#+RESULTS:
#+begin_example
    Loading data set into their data frame...
'data.frame':	1861 obs. of  11 variables:
 $ description: chr  "iPad is in 8.5+ out of 10 cosmetic condition!" "Previously used, please read description. May show signs of use such as scratches to the screen and " NA NA ...
 $ biddable   : chr  "0" "1" "0" "0" ...
 $ startprice : chr  "159.99" "0.99" "199.99" "235" ...
 $ condition  : chr  "Used" "Used" "Used" "New other (see details)" ...
 $ cellular   : chr  "0" "1" "0" "0" ...
 $ carrier    : chr  "None" "Verizon" "None" "None" ...
 $ color      : chr  "Black" NA "White" NA ...
 $ storage    : chr  "16" "16" "16" "16" ...
 $ productline: chr  "iPad 2" "iPad 2" "iPad 4" "iPad mini 2" ...
 $ sold       : chr  "0" "1" "1" "0" ...
 $ UniqueID   : chr  "10001" "10002" "10003" "10004" ...
#+end_example

** Preprocessing the data

#+begin_src R :session :results output :exports all
  writeLines("\n :: Converting data types in the dataframe...")
  eBayiPadTrain$biddable <- as.integer(eBayiPadTrain$biddable)
  eBayiPadTrain$startprice <- as.numeric(eBayiPadTrain$startprice)
  eBayiPadTrain$cellular <- as.integer(eBayiPadTrain$cellular)
  eBayiPadTrain$storage <- as.integer(eBayiPadTrain$storage)
  eBayiPadTrain$sold <- as.integer(eBayiPadTrain$sold)
#+end_src

#+RESULTS:
:
:  :: Converting data types in the dataframe...

** Exploratory data analysis

#+begin_src R :session :results output :exports all
  writeLines("\n :: Summary of the data:")
  str(eBayiPadTrain)
  summary(eBayiPadTrain)
#+end_src

#+RESULTS:
#+begin_example

 :: Summary of the data:
'data.frame':	1861 obs. of  11 variables:
 $ description: chr  "iPad is in 8.5+ out of 10 cosmetic condition!" "Previously used, please read description. May show signs of use such as scratches to the screen and " NA NA ...
 $ biddable   : int  0 1 0 0 0 1 1 0 1 1 ...
 $ startprice : num  159.99 0.99 199.99 235 199.99 ...
 $ condition  : chr  "Used" "Used" "Used" "New other (see details)" ...
 $ cellular   : int  0 1 0 0 NA 1 0 0 1 0 ...
 $ carrier    : chr  "None" "Verizon" "None" "None" ...
 $ color      : chr  "Black" NA "White" NA ...
 $ storage    : int  16 16 16 16 NA 32 16 16 64 32 ...
 $ productline: chr  "iPad 2" "iPad 2" "iPad 4" "iPad mini 2" ...
 $ sold       : int  0 1 1 0 0 1 1 0 1 1 ...
 $ UniqueID   : chr  "10001" "10002" "10003" "10004" ...
 description           biddable        startprice      condition
 Length:1861        Min.   :0.0000   Min.   :  0.01   Length:1861
 Class :character   1st Qu.:0.0000   1st Qu.: 80.00   Class :character
 Mode  :character   Median :0.0000   Median :179.99   Mode  :character
                    Mean   :0.4498   Mean   :211.18
                    3rd Qu.:1.0000   3rd Qu.:300.00
                    Max.   :1.0000   Max.   :999.00

    cellular        carrier             color              storage
 Min.   :0.0000   Length:1861        Length:1861        Min.   : 16.00
 1st Qu.:0.0000   Class :character   Class :character   1st Qu.: 16.00
 Median :0.0000   Mode  :character   Mode  :character   Median : 16.00
 Mean   :0.3196                                         Mean   : 34.23
 3rd Qu.:1.0000                                         3rd Qu.: 32.00
 Max.   :1.0000                                         Max.   :128.00
 NA's   :234                                            NA's   :183
 productline             sold          UniqueID
 Length:1861        Min.   :0.0000   Length:1861
 Class :character   1st Qu.:0.0000   Class :character
 Mode  :character   Median :0.0000   Mode  :character
                    Mean   :0.4621
                    3rd Qu.:1.0000
                    Max.   :1.0000
#+end_example
