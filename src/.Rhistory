'org_babel_R_eoe'
summary(poll)
table(poll$Internet.Use, poll$Smartphone)
'org_babel_R_eoe'
table(poll$Internet.Use, poll$Smartphone)
'org_babel_R_eoe'
table(poll$Internet.Use, poll$Smartphone)
'org_babel_R_eoe'
summary(poll$Internet.Use)
'org_babel_R_eoe'
summary(poll$Smartphone)
'org_babel_R_eoe'
head(poll$Internet.Use)
head(poll$Smartphone)
limited <- subset(poll, Internet.Use == 1 | Smartphone == 1)
'org_babel_R_eoe'
limited <- subset(poll, Internet.Use == 1 | Smartphone == 1)
nrow(limited)
'org_babel_R_eoe'
summary(limited)
'org_babel_R_eoe'
summary(poll$Info.On.Internet)
'org_babel_R_eoe'
mean(poll$Info.On.Internet)
summary(poll$Info.On.Internet)
'org_babel_R_eoe'
mean(poll$Info.On.Internet, na.rm = TRUE)
summary(poll$Info.On.Internet)
'org_babel_R_eoe'
length(poll[poll$Info.On.Internet == 0, ])
'org_babel_R_eoe'
dim(poll[poll$Info.On.Internet == 0, ])
'org_babel_R_eoe'
nrow(poll[poll$Info.On.Internet == 0, ])
'org_babel_R_eoe'
nrow(poll[poll$Info.On.Internet == 0, ])
nrow(poll[poll$Info.On.Internet == 11, ])
'org_babel_R_eoe'
nrow(tmpPoll)
nrow(subset(poll, Info.On.Internet == 0, na.rm = TRUE))
nrow(subset(poll, Info.On.Internet == 11, na.rm = TRUE))

nrow(poll[poll$Info.On.Internet == 0, ])
nrow(poll[poll$Info.On.Internet == 11, ])
'org_babel_R_eoe'
nrow(subset(poll, Info.On.Internet == 0, na.rm = TRUE))
nrow(subset(poll, Info.On.Internet == 11, na.rm = TRUE))

table(limited$Info.On.Internet)
'org_babel_R_eoe'
head(poll$Worry.About.Info)
summary(poll$Worry.About.Info)
nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE))
'org_babel_R_eoe'
table(poll$Worry.About.Info, na.rm = TRUE)

nrow(subset(poll, Worry.About.Info == 0, na.rm = TRUE))
nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE))
'org_babel_R_eoe'
table(poll$Worry.About.Info)

nrow(subset(poll, Worry.About.Info == 0, na.rm = TRUE))
nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE))
'org_babel_R_eoe'
table(poll$Worry.About.Info)

nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE)) /
(nrow(subset(poll, Worry.About.Info == 0, na.rm = TRUE)) +
nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE)))
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frame...")
poll <- read.table("../data/AnonymityPoll.csv", sep = ",", header = TRUE)

writeLines("\n    Number of interviewees:")
nrow(poll)
'org_babel_R_eoe'
limited <- subset(poll, Internet.Use == 1 | Smartphone == 1)
nrow(limited)
'org_babel_R_eoe'
table(poll$Worry.About.Info)

nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE)) /
(nrow(subset(poll, Worry.About.Info == 0, na.rm = TRUE)) +
nrow(subset(poll, Worry.About.Info == 1, na.rm = TRUE)))
'org_babel_R_eoe'
q(n)
q()
n
writeLines("    Loading data into their data frame...")
poll <- read.table("../data/AnonymityPoll.csv", sep = ",", header = TRUE)

writeLines("\n    Number of interviewees:")
nrow(poll)
'org_babel_R_eoe'
limited <- subset(poll, Internet.Use == 1 | Smartphone == 1)
nrow(limited)
'org_babel_R_eoe'
summary(limited$Privacy.Laws.Effective)
table(limited$Privacy.Laws.Effective)

nrow(subset(limited, Privacy.Laws.Effective == 1)) /
(nrow(subset(limited, Privacy.Laws.Effective == 0)) +
         nrow(subset(limited, Privacy.Laws.Effective == 1)))
'org_babel_R_eoe'
names(limited)
hist(limited$Age)
table(limited$Age, limited$Info.On.Internet)
'org_babel_R_eoe'
sort(table(limited$Age, limited$Info.On.Internet), decreasing = TRUE)
'org_babel_R_eoe'
table(limited$Age, limited$Info.On.Internet)
'org_babel_R_eoe'
which.max(table(limited$Age, limited$Info.On.Internet))
'org_babel_R_eoe'
table(limited$Age, limited$Info.On.Internet)
'org_babel_R_eoe'
summary(limited$Age)
summary(limited$Info.On.Internet)
table(limited$Age, limited$Info.On.Internet)
'org_babel_R_eoe'
summary(limited$Age)
summary(limited$Info.On.Internet)
sort(table(limited$Age, limited$Info.On.Internet))
'org_babel_R_eoe'
summary(limited$Age)
summary(limited$Info.On.Internet)
sort(table(limited$Age, limited$Info.On.Internet), decreasing = TRUE)
'org_babel_R_eoe'
summary(limited$Age)
summary(limited$Info.On.Internet)
sort(table(limited$Age, limited$Info.On.Internet), decreasing = TRUE)
max(table(limited$Age, limited$Info.On.Internet))
'org_babel_R_eoe'
summary(limited$Age)
summary(limited$Info.On.Internet)
sort(table(limited$Age, limited$Info.On.Internet), decreasing = TRUE)

writeLines("\n    A better way.")
max(table(limited$Age, limited$Info.On.Internet))
'org_babel_R_eoe'
plot(jitter(c(1, 2, 3)))
summary(limited$Info.On.Internet)
'org_babel_R_eoe'
tapply(limited$Info.On.Internet, limited$Smartphone, summary)
'org_babel_R_eoe'
tapply(limited$Tried.Masking.Identity, limited$Smartphone, summary)
'org_babel_R_eoe'
tapply(limited$Tried.Masking.Identity, limited$Smartphone, summary)
'org_babel_R_eoe'
tapply(limited$Tried.Masking.Identity, limited$Smartphone, summary)
'org_babel_R_eoe'
q()
n
data
yHat
data
data
x <- c(1, 0, 1); y <- c(8, 2, 2)
yHat <- (3 * x) + 2
data <- data.frame(x, y, yHat)
'org_babel_R_eoe'

IndependentVar <- c(1, 0, 1)
 
DependentVar <- c(8, 2, 2)
 
 
X <- matrix(IndependentVar, ncol = 2, byrow = T)
 
Y <- matrix(DependentVar, ncol = 1, byrow = T)
 
 
XPrime <- t(X) #transposing X
YPrime <- t(Y) #transposing Y
 
 
n <- c(30)  #here we assign our n equal to 30
I <- matrix(0, nrow = n, ncol = n)  #we define an n by n 
                          #matrix here that has an entries of 0.
I[row(I) == col(I)] <- 1  #here we assign a value 1 if the ith 
                          #rows is equal to the jth columns.
 
 
J <- matrix(1, nrow = n, ncol = n)
 

XXPrime <- XPrime%*%X       #here we define Xâ€™X
Inverse <- solve(XXPrime)   #here we have (Xâ€™X)^(-1)
H <- X%*%Inverse%*%XPrime

 
SSRCen <- H â€“ J/30  #here we define (H â€“ J/n)
SSR <- YPrime%*%SSRCen%*%Y
SSR
        [,1]
[1,]  640267.6
 
 
SSECen <- I â€“ H  #here we define (I â€“ H)
SSE <- YPrime%*%SSECen%*%Y
SSR
        [,1]
[1,]  1825214
 

SSTCen <- I â€“ J/30  #here we define (I â€“ J/n)
SST <- YPrime%*%SSTCen%*%Y
SST
        [,1]
[1,]  2465481
 
SSR <- SST â€“ SSE
SSR
        [,1]
[1,]  640267.6
 
Beta <- Inverse%*%XPrime%*%Y
Beta
        [,1]
[1,]  761.04720
[2,]   10.48381
 
'org_babel_R_eoe'
e
y
yHat
e
eSq
data
x <- c(1, 0, 1); y <- c(8, 2, 2)
yHat <- (3 * x) + 2
e <- y - yHat
eSq <- e^2
data <- data.frame(x, y, yHat, e, eSq)
names(data) <- c("x", "y", "yHat", "error", "errorSQ")
sum(data$errorSQ)
'org_babel_R_eoe'
beta0
data
names(data)
x <- c(1, 0, 1); y <- c(8, 2, 2); beta0 <- rep(2, 3)
yHat <- (3 * x) + 2
eSqModel <- (y - yHat)^2
eSqBL <- (y - beta0)^2
data <- data.frame(x, y, yHat, eSqModel, eSqBL)

writeLines("\n    The baseline prediction")
beta0[1]

writeLines("\n    The SSE for the model yHat")
sum(data$eSqModel)

writeLines("\n    The SSE for the Baseline")
sum(data$eSqBL)

writeLines("\n    The R^2 of the model")
1 - (sum(data$eSqModel) / sum(data$eSqBL))
'org_babel_R_eoe'
beta0
y - beta0
y
y
beta0
y - beta0
(y - beta0)^2
x <- c(1, 0, 1); y <- c(8, 2, 2); beta0 <- rep(mean(y), 3)
yHat <- (3 * x) + 2

eSqModel <- (y - yHat)^2
eSqBL <- (y - beta0)^2
data <- data.frame(x, y, yHat, eSqModel, eSqBL)

writeLines("\n    The baseline prediction")
beta0[1]

writeLines("\n    The SSE for the model yHat")
sum(data$eSqModel)

writeLines("\n    The SSE for the Baseline")
sum(data$eSqBL)

writeLines("\n    The R^2 of the model")
1 - (sum(data$eSqModel) / sum(data$eSqBL))
'org_babel_R_eoe'
q()
n
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
model1 <- lm(Price ~ AGST, data = wine)
'org_babel_R_eoe'
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

model1$residuals
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n Sum of Squared Errors")
model1$residuals
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frame...")
poll <- read.table("../data/AnonymityPoll.csv", sep = ",", header = TRUE)

writeLines("\n    Number of interviewees:")
nrow(poll)
'org_babel_R_eoe'
limited <- subset(poll, Internet.Use == 1 | Smartphone == 1)
nrow(limited)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model4 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
model4 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Remove FrancePop")
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summar  y(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- su  m(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summar  y(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
'org_babel_R_eoe'
writeLines("\n :: Remove Age and FrancePop")
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$HarvestRain ,wine$WinterRain)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header =
        TRUE)
str(wineTest)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(model4, newdata=wineTest)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
q()
n
