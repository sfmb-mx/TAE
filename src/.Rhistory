if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/IBMStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/GEStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/ProcterGambleStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CocaColaStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/BoeingStock.csv")

fileName <- c("IBMStock.csv", "GEStock.csv", "ProcterGambleStock.csv", "CocaColaStock.csv", "BoeingStock.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
filePath[1]
filePath[2]
filePath
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)

writeLines("    Initial analysis of data frames")
nrow(IBM)
str(IBM)

nrow(GE)
str(GE)

nrow(ProcterGamble)
str(ProcterGamble)

nrow(CocaCola)
str(CocaCola)

nrow(Boeing)
str(Boeing)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)

writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
'org_babel_R_eoe'
writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
head(IBM$Date)
head(IBM$Year)
class(IBM$Year)
head(sort(IBM$Year))
anyNA(IBM$Year)
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
summary(IBM$Date)
'org_babel_R_eoe'
names(IBM)
summary(IBM$StockPrice)
'org_babel_R_eoe'
names(IBM)
mean(IBM$StockPrice)
summary(IBM$StockPrice)
'org_babel_R_eoe'
names(IBM)
mean(IBM$StockPrice)
'org_babel_R_eoe'
names(IBM)

writeLines("The mean is:")
mean(IBM$StockPrice)
'org_babel_R_eoe'
summary(GE)
'org_babel_R_eoe'
summary(GE$StockPrice)
'org_babel_R_eoe'
summary(CocaCola$StockPrice)
'org_babel_R_eoe'
summary(Boeing$StockPrice)
'org_babel_R_eoe'
sd(ProcterGamble$StockPrice)
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
'org_babel_R_eoe'
writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
'org_babel_R_eoe'
writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
tapply(IBM$Stockprice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)
tapply(IBM$Stockprice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)
mean(IBM$StockPrice)
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)

print("The over mean of the IBI stock price is:")
mean(IBM$StockPrice)
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)

print("The over mean of the IBI stock price is:")
mean(IBM$StockPrice)
print("Mean stock price of IBM by month:")
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(GE); names(CocaCola)

writeLines("\nThe over mean of the GE stock price is:")
mean(GE$StockPrice)

writeLines("\nThe over mean of the Coca-Cola stock price is:")
mean(CocaCola$StockPrice)

writeLines("\nMean stock price of GE by month:")
tapply(GE$StockPrice, months(GE$Date), mean)

writeLines("\nMean stock price of Coca-Cola  by month:")
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)
'org_babel_R_eoe'
ls()

writeLines("\nThe over mean of the Boeing stock price is:")
mean(Boeing$StockPrice)

writeLines("\nThe over mean of the Coca-Cola stock price is:")
mean(CocaCola$StockPrice)

writeLines("\nThe over mean of the GE stock price is:")
mean(GE$StockPrice)

writeLines("\nThe over mean of the IBM stock price is:")
mean(IBM$StockPrice)

writeLines("\nThe over mean of the Procter&Gamble stock price is:")
mean(ProcterGamble$StockPrice)

writeLines("\n---------\n")

writeLines("\nMean stock price of Boeing  by month:")
tapply(Boeing$StockPrice, months(Boeing$Date), mean)

writeLines("\nMean stock price of Coca-Cola  by month:")
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)

writeLines("\nMean stock price of GE by month:")
tapply(GE$StockPrice, months(GE$Date), mean)

writeLines("\nMean stock price of IBM  by month:")
tapply(IBM$StockPrice, months(IBM$Date), mean)

writeLines("\nMean stock price of ProcterGamble  by month:")
tapply(ProcterGamble$StockPrice, months(ProcterGamble$Date), mean)
'org_babel_R_eoe'
writeLines("\nThe over mean of the Boeing stock price is:")
mean(Boeing$StockPrice)

writeLines("\nThe over mean of the Coca-Cola stock price is:")
mean(CocaCola$StockPrice)

writeLines("\nThe over mean of the GE stock price is:")
mean(GE$StockPrice)

writeLines("\nThe over mean of the IBM stock price is:")
mean(IBM$StockPrice)

writeLines("\nThe over mean of the Procter&Gamble stock price is:")
mean(ProcterGamble$StockPrice)

writeLines("\n---------\n")

writeLines("\nMean stock price of Boeing  by month:")
tapply(Boeing$StockPrice, months(Boeing$Date), mean)

writeLines("\nMean stock price of Coca-Cola  by month:")
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)

writeLines("\nMean stock price of GE by month:")
tapply(GE$StockPrice, months(GE$Date), mean)

writeLines("\nMean stock price of IBM  by month:")
tapply(IBM$StockPrice, months(IBM$Date), mean)

writeLines("\nMean stock price of ProcterGamble  by month:")
tapply(ProcterGamble$StockPrice, months(ProcterGamble$Date), mean)
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frames...")
CPS <- read.table("../data/CPSData.csv", sep = ",", header = TRUE)

writeLines("\n    Summary of CPS dataframe:")
summary(CPS)

writeLines("\n    str command of the CPS dataframe")
str(CPS)

writeLines("\n    Number of interviewees:")
nrow(CPS)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")

MetroAreaMap <- read.table("../data/MetroAreaCodes.csv", sep = ",", header = TRUE)
CountryMap <- read.table("../data/CountryCodes.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
CPS <- merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
'org_babel_R_eoe'
head(sort(table(CPS$MetroArea), decreasing = TRUE), 10)
'org_babel_R_eoe'
head(sort(tapply(CPS$Hispanic, CPS$MetroArea, mean), decreasing = TRUE))
'org_babel_R_eoe'
length(tmp)
tmp[tmp >= 0.2]
head(sort(tapply(CPS$Hispanic, CPS$MetroArea, mean), decreasing = TRUE, na.rm = TRUE))
head(sort(tapply(CPS$Hispanic, CPS$MetroArea, mean), decreasing = TRUE))
head(sort(tapply(CPS$Hispanic, CPS$MetroArea, mean), decreasing = TRUE), 20)
tmp
head(sort(table(CPS$MetroArea), decreasing = TRUE), 10)
head(sort(table(CPS$MetroArea), decreasing = TRUE), 20)
tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
tmp[1]
tmp[[1]]
tmp <- tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
head(tmp)
dim(tmp)
tmp[[1]]
'org_babel_R_eoe'
head(tmp)
tmp2[1]
length(tmp)
tmp2[[1]]
tmp[1]
J
j
TMP
tmp
head(tmp)
tmp <- tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
head(tmp)
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frames...")
CPS <- read.table("../data/CPSData.csv", sep = ",", header = TRUE)

writeLines("\n    Summary of CPS dataframe:")
summary(CPS)

writeLines("\n    str command of the CPS dataframe")
str(CPS)

writeLines("\n    Number of interviewees:")
nrow(CPS)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")

MetroAreaMap <- read.table("../data/MetroAreaCodes.csv", sep = ",", header = TRUE)
CountryMap <- read.table("../data/CountryCodes.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
CPS <- merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
'org_babel_R_eoe'
head(sort(table(CPS$MetroArea), decreasing = TRUE), 10)
'org_babel_R_eoe'
head(sort(tapply(CPS$Hispanic, CPS$MetroArea, mean), decreasing = TRUE))
'org_babel_R_eoe'
length(tmp)
head(CPS, 50)
tmp
rm(tmp)
summary(AsianInt)
AsianInt <- subset(CPS, CPS$Race == "Asian")
summary(AsianInt)

tmp <- tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
tmp
'org_babel_R_eoe'
class(tmp)
head(tmp)
tmp
dim(tmp)
length(tmp)
class(tmp)
head(tmp)
tmp
summary(tmp)
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))

tmp <- tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
tmp <- sort(as.vector(tmp), decreasing = TRUE)
head(tmp)
'org_babel_R_eoe'
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean), decreasing = TRUE)

tmp <- tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
tmp <- sort(as.vector(tmp), decreasing = TRUE)
head(tmp)
'org_babel_R_eoe'
head(sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean), decreasing = TRUE))

## tmp <- tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
## tmp <- sort(as.vector(tmp), decreasing = TRUE)
## head(tmp)
'org_babel_R_eoe'
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean))
'org_babel_R_eoe'
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE))
'org_babel_R_eoe'
head(sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE)))
'org_babel_R_eoe'
names(CPS)
names(CountryMap)
head(CPS)
head(CountryMap)
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
'org_babel_R_eoe'
names(CPS)
'org_babel_R_eoe'
nrow(CPS[is.na(CPS$Country),])
'org_babel_R_eoe'
table(CPS$Country)
'org_babel_R_eoe'
head(sort(table(CPS$Country), decreasing = TRUE))
'org_babel_R_eoe'
table(CPS$Country)
sort(table(CPS$Country))
table(CPS$CountryOfBirthCode)
sort(table(CPS$CountryOfBirthCode), decreasing = TRUE)
CountryMap
head(sort(table(CPS$Country), decreasing = TRUE))
'org_babel_R_eoe'
table(CPS$MetroArea ==
              "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country)
'org_babel_R_eoe'
table(CPS$Country, CPS$MetroArea ==
        "New York-Northern New Jersey-Long Island, NY-NJ-PA")
'org_babel_R_eoe'
table(CPS$Country, CPS$MetroArea ==
        "New York-Northern New Jersey-Long Island, NY-NJ-PA",
      na.remove = TRUE)
'org_babel_R_eoe'
table(CPS$Country, CPS$MetroArea ==
        "New York-Northern New Jersey-Long Island, NY-NJ-PA")
'org_babel_R_eoe'
ForMetroArea
head(CPS$Country == "United States")
head(ForMetroArea)
head(ForMetroarea)
head(ForMetroArea)
nrow(ForMetroArea)
ForMetroArea <- subset(CPS, Country != "United States" | Country != NA)
table(ForMetroArea$Country, ForMetroArea$MetroArea ==
        "New York-Northern New Jersey-Long Island, NY-NJ-PA")
'org_babel_R_eoe'
ForMetroArea <- subset(CPS, Country != "United States" | Country != NA)
table(ForMetroArea$MetroArea ==
        "New York-Northern New Jersey-Long Island, NY-NJ-PA")
'org_babel_R_eoe'
ForMetroArea <- subset(CPS, Country != "United States" | Country != NA)
table(ForMetroArea$MetroArea ==
              "New York-Northern New Jersey-Long Island, NY-NJ-PA")
1668 / (12744 + 1668)
'org_babel_R_eoe'
table(ForMetroArea$MetroArea)
ForMetroArea <- subset(CPS, Country != NA)
table(ForMetroArea$MetroArea ==
              "New York-Northern New Jersey-Long Island, NY-NJ-PA")
1668 / (12744 + 1668)
'org_babel_R_eoe'
names(ForMetroArea)
dim(ForMetroArea)
dim(ForMetroArea)
dim(CP)
dim(CPS)
ForMetroArea <- subset(CPS, !is.na(CPS$Country))
table(ForMetroArea$MetroArea, ForMetroArea$Country)
summary(ForMetroArea)
'org_babel_R_eoe'
ForMetroArea <- subset(CPS, !is.na(CPS$Country))
table(ForMetroArea$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", ForMetroArea$Country)
'org_babel_R_eoe'
ForMetroArea <- subset(CPS, !is.na(CPS$Country))
table(ForMetroArea$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", ForMetroArea$Country != "United States")
'org_babel_R_eoe'
ForMetroArea <- subset(CPS, !is.na(CPS$Country))
table(ForMetroArea$MetroArea ==
              "New York-Northern New Jersey-Long Island, NY-NJ-PA",
      ForMetroArea$Country != "United States")
'org_babel_R_eoe'
ForMetroArea <- subset(CPS, !is.na(CPS$Country))
table(ForMetroArea$MetroArea ==
              "New York-Northern New Jersey-Long Island, NY-NJ-PA",
      ForMetroArea$Country != "United States")
1668 / (3736 + 1668)
'org_babel_R_eoe'
tapply(CPS$MetroArea, CPS$Country, max, na.rm = TRUE)
'org_babel_R_eoe'
table(CPS$MetroArea, CPS$Country == "India")
'org_babel_R_eoe'
sort(table(CPS$MetroArea, CPS$Country == "India"))
'org_babel_R_eoe'
sort(table(CPS$MetroArea, CPS$Country == "India"), decreasing = TRUE)
'org_babel_R_eoe'
table(CPS$MetroArea, CPS$Country == "India")
'org_babel_R_eoe'
ForMetroAreaIndia
dim(ForMetroAreaIndia)
head(ForMetroAreaIndia)
table(CPS$MetroArea, CPS$Country == "India")

ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
anyNA(ForMetroAreaIndia$Country)
table(ForMetroAreaIndia$MetroArea)
'org_babel_R_eoe'
table(CPS$MetroArea, CPS$Country == "India")

ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
anyNA(ForMetroAreaIndia$Country)
sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE)
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
anyNA(ForMetroAreaIndia$Country)
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE))

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
anyNA(ForMetroAreaBrazil$Country)
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE))
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
anyNA(ForMetroAreaIndia$Country)
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE))

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
anyNA(ForMetroAreaBrazil$Country)
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE))

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
anyNA(ForMetroAreaSomalia$Country)
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE))
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
anyNA(ForMetroAreaIndia$Country)
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE), 3)

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
anyNA(ForMetroAreaBrazil$Country)
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE), 3)

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
anyNA(ForMetroAreaSomalia$Country)
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE), 3)
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE), 3)

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE), 3)

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE), 3)
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE), 1)

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE), 1)

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE), 1)

sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE))

sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm=TRUE))

sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm=TRUE))
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE), 1)

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE), 1)

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE), 1)

head(sort(tapply(CPS$Country == "India", CPS$MetroArea, sum,
                 na.rm=TRUE)), 1)

head(sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum,
                 na.rm=TRUE)), 1)

head(sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum,
                 na.rm=TRUE)), 1)
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE), 1)

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE), 1)

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE), 1)

head(sort(tapply(CPS$Country == "India", CPS$MetroArea, sum,
                 na.rm=TRUE), decreasing = TRUE), 1)

head(sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum,
                 na.rm=TRUE), decreasing = TRUE), 1)

head(sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum,
                 na.rm=TRUE), decreasing = TRUE), 1)
'org_babel_R_eoe'
ForMetroAreaIndia <- subset(CPS, CPS$Country == "India")
head(sort(table(ForMetroAreaIndia$MetroArea), decreasing = TRUE), 1)

ForMetroAreaBrazil <- subset(CPS, CPS$Country == "Brazil")
head(sort(table(ForMetroAreaBrazil$MetroArea), decreasing = TRUE), 1)

ForMetroAreaSomalia <- subset(CPS, CPS$Country == "Somalia")
head(sort(table(ForMetroAreaSomalia$MetroArea), decreasing = TRUE), 1)

writeLines("\n Other method!")

head(sort(tapply(CPS$Country == "India", CPS$MetroArea, sum,
                 na.rm=TRUE), decreasing = TRUE), 1)

head(sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum,
                 na.rm=TRUE), decreasing = TRUE), 1)

head(sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum,
                 na.rm=TRUE), decreasing = TRUE), 1)
'org_babel_R_eoe'
q()
n
