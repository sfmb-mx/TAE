
fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Remove FrancePop")
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
'org_babel_R_eoe'
writeLines("\n :: Remove Age and FrancePop")
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$HarvestRain ,wine$WinterRain)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header =
        TRUE)
str(wineTest)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(model4, newdata=wineTest)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.table("../data/baseball.csv", sep = ",", header = TRUE)
str(baseball)
summary(baseball)
'org_babel_R_eoe'
writeLines("\n :: Subset to only include moneyball years")
moneyball <- subset(baseball, Year < 2002)
str(moneyball)
summary(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Compute Run Difference")
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict wins")
WinsReg <- lm(W ~ RD, data = moneyball)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Using the predict function")
RD <- (713 - 614)
TestData01 <- data.frame(RD)
predict(WinsReg, TestData01)

writeLines("\n :: Using the model directly")
W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
writeLines("\n :: Structure of the DF")
str(moneyball)

writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data = moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs allowed")
RunsAllowed <- lm(RA ~ OOBP + OSLG, data = moneyball)
summary(RunsAllowed)
'org_babel_R_eoe'
OBP <- 0.311; SLG <- 0.405
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OOBP <- 0.297; OSLG <- 0.370
RSTest02 <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RSTest02)
'org_babel_R_eoe'
ls()
names(moneyball)
nrow(moneyball)
head(subset(moneyball, Year == 2002), 20)
class(moneyball$Year)
head(moneyball$Year)
head(moneyball[moneyball$Year == 2002, ])
head(moneyball)
tail(moneyball)
head(moneyball)
head(moneyball[moneyball$Year == 2001, ])
tail(moneyball[moneyball$Year == 2001, ])
tail(moneyball[moneyball$Year == 2001, ])
summary(moneyball$Team)
tail(moneyball[moneyball$Year == 2001 & moneyball$TE, ])
tail(moneyball[moneyball$Year == 2001 & moneyball$Team == "OAK", ])
moneyball[moneyball$Year == 2001 & moneyball$Team == "OAK", ]
ls()
baseball[baseball$Year == 2001 $ baseball$Team == "OAK"]
baseball[baseball$Year == 2001 & baseball$Team == "OAK"]
baseball[baseball$Year == 2001 & baseball$Team == "OAK", ]
baseball[baseball$Team == "OAK", ]
OBP <- 0.339; SLG <- 0.430
RSTest2002 <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest2002)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RA <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RA)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OOBP <- 0.297; OSLG <- 0.370
RATest <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RATest)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RS2002 <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RS2002)
'org_babel_R_eoe'
OOBP <- 0.307; OSLG <- 0.373
RA2002 <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RA2002)
'org_babel_R_eoe'
q()
n
x <- c(1, 0, 1); y <- c(8, 2, 2); beta0 <- rep(mean(y), 3)
yHat <- (3 * x) + 2

eSqModel <- (y - yHat)^2
eSqBL <- (y - beta0)^2
data <- data.frame(x, y, yHat, eSqModel, eSqBL)

writeLines("\n    The baseline prediction")
beta0[1]

writeLines("\n    The SSE for the model yHat")
sum(data$eSqModel)

writeLines("\n    The SSE for the Baseline")
sum(data$eSqBL)

writeLines("\n    The R^2 of the model")
1 - (sum(data$eSqModel) / sum(data$eSqBL))
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Remove FrancePop")
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
'org_babel_R_eoe'
writeLines("\n :: Remove Age and FrancePop")
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$HarvestRain ,wine$WinterRain)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header =
        TRUE)
str(wineTest)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(model4, newdata=wineTest)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.table("../data/baseball.csv", sep = ",", header = TRUE)
str(baseball)
summary(baseball)
'org_babel_R_eoe'
writeLines("\n :: Subset to only include moneyball years")
moneyball <- subset(baseball, Year < 2002)
str(moneyball)
summary(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Compute Run Difference")
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict wins")
WinsReg <- lm(W ~ RD, data = moneyball)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Using the predict function")
RD <- (713 - 614)
TestData01 <- data.frame(RD)
predict(WinsReg, TestData01)

writeLines("\n :: Using the model directly")
W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
writeLines("\n :: Structure of the DF")
str(moneyball)

writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data = moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs allowed")
RunsAllowed <- lm(RA ~ OOBP + OSLG, data = moneyball)
summary(RunsAllowed)
'org_babel_R_eoe'
OBP <- 0.311; SLG <- 0.405
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OOBP <- 0.297; OSLG <- 0.370
RATest <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RATest)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RS2002 <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RS2002)
'org_babel_R_eoe'
OOBP <- 0.307; OSLG <- 0.373
RA2002 <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RA2002)
'org_babel_R_eoe'
q()
n
x <- c(1, 0, 1); y <- c(8, 2, 2); beta0 <- rep(mean(y), 3)
yHat <- (3 * x) + 2

eSqModel <- (y - yHat)^2
eSqBL <- (y - beta0)^2
data <- data.frame(x, y, yHat, eSqModel, eSqBL)

writeLines("\n    The baseline prediction")
beta0[1]

writeLines("\n    The SSE for the model yHat")
sum(data$eSqModel)

writeLines("\n    The SSE for the Baseline")
sum(data$eSqBL)

writeLines("\n    The R^2 of the model")
1 - (sum(data$eSqModel) / sum(data$eSqBL))
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Remove FrancePop")
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
'org_babel_R_eoe'
writeLines("\n :: Remove Age and FrancePop")
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$HarvestRain ,wine$WinterRain)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header =
        TRUE)
str(wineTest)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(model4, newdata=wineTest)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.table("../data/baseball.csv", sep = ",", header = TRUE)
str(baseball)
summary(baseball)
'org_babel_R_eoe'
writeLines("\n :: Subset to only include moneyball years")
moneyball <- subset(baseball, Year < 2002)
str(moneyball)
summary(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Compute Run Difference")
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict wins")
WinsReg <- lm(W ~ RD, data = moneyball)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Using the predict function")
RD <- (713 - 614)
TestData01 <- data.frame(RD)
predict(WinsReg, TestData01)

writeLines("\n :: Using the model directly")
W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
writeLines("\n :: Structure of the DF")
str(moneyball)

writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data = moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs allowed")
RunsAllowed <- lm(RA ~ OOBP + OSLG, data = moneyball)
summary(RunsAllowed)
'org_babel_R_eoe'
OBP <- 0.311; SLG <- 0.405
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OOBP <- 0.297; OSLG <- 0.370
RATest <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RATest)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RS2002 <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RS2002)
'org_babel_R_eoe'
OOBP <- 0.307; OSLG <- 0.373
RA2002 <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RA2002)
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
RSnewPlayers <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSnewPlayers)
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
PlayerName <- c("Eric Chavez", "Jeremy Giambi", "Frank Menechino",
                "Greg Myers", "Carlos Pena")
RSnewPlayers <- data.frame(PlayerName, OBP, SLG)
RSnewPlayers$RSPred <- predict(RunsReg, newdata = RSnewPlayers)
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
PlayerName <- c("Eric Chavez", "Jeremy Giambi", "Frank Menechino",
                "Greg Myers", "Carlos Pena")
RSnewPlayers <- data.frame(PlayerName, OBP, SLG)
RSnewPlayers$RSPred <- predict(RunsReg, newdata = RSnewPlayers)
RSnewPlayers
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
PlayerName <- c("Eric Chavez", "Jeremy Giambi", "Frank Menechino",
                "Greg Myers", "Carlos Pena")
Salary <- c(1400000, 1065000, 295000, 800000, 300000)

RSnewPlayers <- data.frame(PlayerName, OBP, SLG, Salary)
RSnewPlayers$RSPred <- predict(RunsReg, newdata = RSnewPlayers)
RSnewPlayers
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
PlayerName <- c("Eric Chavez", "Jeremy Giambi", "Frank Menechino",
                "Greg Myers", "Carlos Pena")
Salary <- c(1400000, 1065000, 295000, 800000, 300000)

RSnewPlayers <- data.frame(PlayerName, OBP, SLG, Salary)
RSnewPlayers$RSPred <- predict(RunsReg, newdata = RSnewPlayers)
RSnewPlayers

writeLines("\n :: For the best players with the budget restriction:")
RSnewPlayers$Salary[2] + RSnewPlayers$Salary[5]
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
PlayerName <- c("Eric Chavez", "Jeremy Giambi", "Frank Menechino",
                "Greg Myers", "Carlos Pena")
Salary <- c(1400000, 1065000, 295000, 800000, 300000)

RSnewPlayers <- data.frame(PlayerName, OBP, SLG, Salary)
RSnewPlayers$RSPred <- predict(RunsReg, newdata = RSnewPlayers)
RSnewPlayers

writeLines("\n :: For the best players with the budget restriction:")
RSnewPlayers$Salary[2] + RSnewPlayers$Salary[5]
'org_babel_R_eoe'
teamRank = c(1, 2, 3, 3, 4, 4, 4, 4, 5, 5)
'org_babel_R_eoe'
wins2012 <- c(94, 88, 95, 88, 93, 94, 98, 97, 93, 94)
'org_babel_R_eoe'
length(wins2012)
length(teamRank)
wins2013 <- c(97, 97, 92, 93, 92, 96, 94, 96, 92, 90)
'org_babel_R_eoe'
writeLines("\n :: Correlation between teamRank and wins2012")
cor(teamRank, wins2012)
'org_babel_R_eoe'
writeLines("\n :: Correlation between teamRank and wins2013")
cor(teamRank, wins2013)
'org_babel_R_eoe'
q()
n
