Inverse <- solve(XXPrime)   #here we have (Xâ€™X)^(-1)
H <- X%*%Inverse%*%XPrime

 
SSRCen <- H â€“ J/30  #here we define (H â€“ J/n)
SSR <- YPrime%*%SSRCen%*%Y
SSR
        [,1]
[1,]  640267.6
 
 
SSECen <- I â€“ H  #here we define (I â€“ H)
SSE <- YPrime%*%SSECen%*%Y
SSR
        [,1]
[1,]  1825214
 

SSTCen <- I â€“ J/30  #here we define (I â€“ J/n)
SST <- YPrime%*%SSTCen%*%Y
SST
        [,1]
[1,]  2465481
 
SSR <- SST â€“ SSE
SSR
        [,1]
[1,]  640267.6
 
Beta <- Inverse%*%XPrime%*%Y
Beta
        [,1]
[1,]  761.04720
[2,]   10.48381
 
'org_babel_R_eoe'
e
y
yHat
e
eSq
data
x <- c(1, 0, 1); y <- c(8, 2, 2)
yHat <- (3 * x) + 2
e <- y - yHat
eSq <- e^2
data <- data.frame(x, y, yHat, e, eSq)
names(data) <- c("x", "y", "yHat", "error", "errorSQ")
sum(data$errorSQ)
'org_babel_R_eoe'
beta0
data
names(data)
x <- c(1, 0, 1); y <- c(8, 2, 2); beta0 <- rep(2, 3)
yHat <- (3 * x) + 2
eSqModel <- (y - yHat)^2
eSqBL <- (y - beta0)^2
data <- data.frame(x, y, yHat, eSqModel, eSqBL)

writeLines("\n    The baseline prediction")
beta0[1]

writeLines("\n    The SSE for the model yHat")
sum(data$eSqModel)

writeLines("\n    The SSE for the Baseline")
sum(data$eSqBL)

writeLines("\n    The R^2 of the model")
1 - (sum(data$eSqModel) / sum(data$eSqBL))
'org_babel_R_eoe'
beta0
y - beta0
y
y
beta0
y - beta0
(y - beta0)^2
x <- c(1, 0, 1); y <- c(8, 2, 2); beta0 <- rep(mean(y), 3)
yHat <- (3 * x) + 2

eSqModel <- (y - yHat)^2
eSqBL <- (y - beta0)^2
data <- data.frame(x, y, yHat, eSqModel, eSqBL)

writeLines("\n    The baseline prediction")
beta0[1]

writeLines("\n    The SSE for the model yHat")
sum(data$eSqModel)

writeLines("\n    The SSE for the Baseline")
sum(data$eSqBL)

writeLines("\n    The R^2 of the model")
1 - (sum(data$eSqModel) / sum(data$eSqBL))
'org_babel_R_eoe'
q()
n
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/wine_test.csv")

fileName <- c("wine.csv", "wine_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
model1 <- lm(Price ~ AGST, data = wine)
'org_babel_R_eoe'
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

model1$residuals
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n Sum of Squared Errors")
model1$residuals
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frame...")
poll <- read.table("../data/AnonymityPoll.csv", sep = ",", header = TRUE)

writeLines("\n    Number of interviewees:")
nrow(poll)
'org_babel_R_eoe'
limited <- subset(poll, Internet.Use == 1 | Smartphone == 1)
nrow(limited)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
wine <- read.table("../data/wine.csv", sep = ",", header = TRUE)
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)

str(wine)
summary(wine)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (one variable)")
model1 <- lm(Price ~ AGST, data = wine)
summary(model1)

writeLines("\n :: Sum of Squared Errors:")
model1$residuals

writeLines("\n :: Calculating SSE:")
SSE = sum(model1$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (two variables)")
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)

writeLines("\n :: Sum of Squared Errors")
SSE = sum(model2$residuals^2)

writeLines("\n :: Calculating the SSE")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model4 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
model4 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Remove FrancePop")
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model4$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summar  y(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- su  m(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summar  y(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
'org_babel_R_eoe'
writeLines("\n :: Remove Age and FrancePop")
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$HarvestRain ,wine$WinterRain)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header =
        TRUE)
str(wineTest)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(model4, newdata=wineTest)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.csv("baseball.csv")
str(baseball)
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.table("../data/baseball.csv", sep = ",", header = TRUE)
str(baseball)
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.table("../data/baseball.csv", sep = ",", header = TRUE)
str(baseball)
summary(baseball)
'org_babel_R_eoe'
writeLines("\n :: Subset to only include moneyball years")
moneyball <- subset(baseball, Year < 2002)
str(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Subset to only include moneyball years")
moneyball <- subset(baseball, Year < 2002)
str(moneyball)
summary(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Compute Run Difference")
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict wins")
WinsReg <- lm(W ~ RD, data = moneyball)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict wins")
WinsReg <- lm(W ~ RD, data = moneyball)
summary(WinsReg)
'org_babel_R_eoe'
TestData01 <- 713 - 614
predict(WinsReg, TestData01)
'org_babel_R_eoe'
TestData01$RD <- 713 - 614
predict(WinsReg, TestData01)
'org_babel_R_eoe'
TestData01$RD <- data.frame(713 - 614)
#predict(WinsReg, TestData01)

W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
TestData01$RD <- data.frame(713 - 614)
predict(WinsReg, TestData01$RD)

W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
TestData01$RD <- data.frame(713 - 614)
predict(WinsReg, TestData01)

W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
class(TestData01)
writeLines("\n :: Using the predict function")
RD <- (713 - 614)
TestData01 <- data.frame(RD)
predict(WinsReg, TestData01)

writeLines("\n :: Using the model directly")
W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
writeLines("\n :: Using the predict function")
RD <- (713 - 614)
TestData01 <- data.frame(RD)
predict(WinsReg, TestData01)

writeLines("\n :: Using the model directly")
W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
writeLines("\n :: Structure of the DF")
str(moneyball)

writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Structure of the DF")
str(moneyball)

writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data=moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data = moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data = moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs allowed")
RunsAllowed <- lm(RA ~ OOBP + OSLG, data = moneyball)
summary(RunsAllowed)
'org_babel_R_eoe'
OBP <- 0.311; SLG <- 0.405
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OOBP <- 0.297; OSLG <- 0.370
RSTest02 <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RSTest02)
'org_babel_R_eoe'
q()
n
