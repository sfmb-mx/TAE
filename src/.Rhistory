library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}


dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}


dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)
names(DemgraphicsData)
class(DemograhicsData)
dim(DemographicsData)
head(DemographicsData)
'org_babel_R_eoe'
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)
names(DemgraphicsData)
class(DemograhicsData)
dim(DemographicsData)
head(DemographicsData)
'org_babel_R_eoe'
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)
names(DemographicsData)
class(DemographicsData)
dim(DemographicsData)
head(DemographicsData)
'org_babel_R_eoe'
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)
names(DemographicsData)
class(DemographicsData)
dim(DemographicsData)
head(DemographicsData)
anyNA(DemographicsData)
'org_babel_R_eoe'
print("Loading data into Demographicsdata dataframe")
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)
names(DemographicsData)
class(DemographicsData)
dim(DemographicsData)
head(DemographicsData)
anyNA(DemographicsData)
'org_babel_R_eoe'
print("*** Loading data into Demographicsdata dataframe ***")
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)
names(DemographicsData)
class(DemographicsData)
dim(DemographicsData)
head(DemographicsData)
anyNA(DemographicsData)
'org_babel_R_eoe'
print("*** Loading data into Demographicsdata dataframe ***")
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)

print("*** Names of the dataframe ***")
names(DemographicsData)

print("*** class of the dataframe ***")
class(DemographicsData)

print("*** Dimension of the dataframe ***")
dim(DemographicsData)

print("*** Head dataframe ***")
head(DemographicsData)

print("*** Any NA in the dataframe ***")
anyNA(DemographicsData)
'org_babel_R_eoe'
print("******* Loading data into Demographicsdata dataframe *******")
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Names of the dataframe *******")
names(DemographicsData)

print("******* class of the dataframe *******")
class(DemographicsData)

print("******* Dimension of the dataframe *******")
dim(DemographicsData)

print("******* Head dataframe *******")
head(DemographicsData)

print("******* Any NA in the dataframe *******")
anyNA(DemographicsData)
'org_babel_R_eoe'
q()
n
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into Demographicsdata dataframe *******")
DemographicsData <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Names of the dataframe *******")
names(DemographicsData)

print("******* class of the dataframe *******")
class(DemographicsData)

print("******* Dimension of the dataframe *******")
dim(DemographicsData)

print("******* Head dataframe *******")
head(DemographicsData)

print("******* Any NA in the dataframe *******")
anyNA(DemographicsData)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
ls()
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico']
'org_babel_R_eoe'
str(WHO)
MXselect <- WHO$Country == 'Mexico'
MXselect
MexicoOH <- WHO[MXselect]
MexicoOH <- WHO[MXselect, ]
MexicoOH
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
print(MexicoOH)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
summary(MexicoOH)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, region == 'Europe')
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
print(head(WHO_Europe))
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
write.csv(WHO_Europe, "../data/WHO_Europe.csv")
'org_babel_R_eoe'
write.csv(WHO_Europe, "../data/WHO_Europe.csv")
'org_babel_R_eoe'
write.csv(WHO_Europe, "../data/WHO_Europe.csv")
rm(WHO_Europe)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
write.csv(WHO_Europe, "../data/WHO_Europe.csv")
rm(WHO_Europe)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
summary(WHO)
summary(WHO)
str(WHO)
WHO$Under15
'org_babel_R_eoe'
print("*** Selecting a variable")
WHO$Under15

print("Calculating the Mean of the variable Under15")
mean(WHO$Under15)
'org_babel_R_eoe'
print("*** Selecting a variable")
WHO$Under15

print("\nCalculating the Mean of the variable Under15")
mean(WHO$Under15)
'org_babel_R_eoe'
print("*** Selecting a variable")
WHO$Under15

writeLines("\nCalculating the Mean of the variable Under15")
mean(WHO$Under15)
'org_babel_R_eoe'
writeLines("\n*** Selecting a variable")
WHO$Under15

writeLines("\n*** Calculating the Mean of the variable Under15")
mean(WHO$Under15)
'org_babel_R_eoe'
writeLines("\n*** Selecting a variable")
WHO$Under15

writeLines("\n*** Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n*** Calculating the Standard Deviation of Under15")
sd(WHO$Under15)
'org_babel_R_eoe'
writeLines("\n*** Selecting a variable")
WHO$Under15

writeLines("\n*** Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n*** Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n*** Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
which.min(WHO$Under15)
'org_babel_R_eoe'
minUnder15Country <- WHO[which.min(WHO$Under15), ]
minUnder15Country$Country
'org_babel_R_eoe'
maxUnder15Country <- WHO[which.max(WHO$Under15), ]
maxUnder15Country
'org_babel_R_eoe'
maxUnder15Country <- WHO[which.max(WHO$Under15), ]
maxUnder15Country$Under15
'org_babel_R_eoe'
maxUnder15Country <- WHO[which.max(WHO$Under15), ]
maxUnder15Country$Country
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
writeLines("\n+++ Selecting a variable")
WHO$Under15

writeLines("\n+++ Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n+++ Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n+++ Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
writeLines("\n\t Selecting a variable")
WHO$Under15

writeLines("\n\t Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n\t Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n\t Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
writeLines("\t Selecting a variable")
WHO$Under15

writeLines("\n\t Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n\t Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n\t Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
writeLines("         Selecting a variable")
WHO$Under15

writeLines("\n         Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n         Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n         Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
writeLines("         Selecting a variable")
WHO$Under15

writeLines("\n         Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n         Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n         Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)
print(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)
nrow(Outliers)
print(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

str(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("     Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

str(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("     Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

writeLines("     Str for the Outliers DF")
str(Outliers)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("     Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

writeLines("     Interested data for the Outliers DF")
Outliers[c("Country", "GNI", "FertilityRate")]
'org_babel_R_eoe'
mean(WHO$Over60, na.rm = TRUE)
'org_babel_R_eoe'
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
summary(WHO)
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
writeLines("        Summary for WHO DF")
summary(WHO)

writeLines("        Answer")
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
writeLines("        Summary for WHO DF")
summary(WHO)

writeLines("\n        Answer")
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
writeLines("        Summary for WHO DF")
summary(WHO)

writeLines("\n        Answer")
maxLR <- WHO[which.max(WHO$LiteracyRate), ]
maxLR$Country
'org_babel_R_eoe'
writeLines("\n        Answer")
maxLR <- WHO[which.max(WHO$LiteracyRate), ]
maxLR$Country
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}

## Data in csv file format
## Downloading data test process.

dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
q()
n
