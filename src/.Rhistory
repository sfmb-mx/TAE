SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (all variables)")
model3 <- lm(Price ~ ., data=wine)
summary(model3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(model3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Remove FrancePop")
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
'org_babel_R_eoe'
writeLines("\n :: Linear Regression (HarvestRain and WinterRain variables)")
modelQQ3 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(modelQQ3)

writeLines("\n :: Sum of Squared Errors")
SSE <- sum(modelQQ3$residuals^2)

writeLines("\n :: Calculating the SSE for all variable model")
SSE
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
'org_babel_R_eoe'
writeLines("\n :: Remove Age and FrancePop")
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
'org_babel_R_eoe'
writeLines("\n :: Correlations")
cor(wine$HarvestRain ,wine$WinterRain)
'org_babel_R_eoe'
writeLines("    Loading the wine test set into their data frame.")
wineTest <- read.table("../data/wine_test.csv", sep = ",", header =
        TRUE)
str(wineTest)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(model4, newdata=wineTest)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute R-squared")
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/baseball.csv")

fileName <- c("baseball.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
baseball <- read.table("../data/baseball.csv", sep = ",", header = TRUE)
str(baseball)
summary(baseball)
'org_babel_R_eoe'
writeLines("\n :: Subset to only include moneyball years")
moneyball <- subset(baseball, Year < 2002)
str(moneyball)
summary(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Compute Run Difference")
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict wins")
WinsReg <- lm(W ~ RD, data = moneyball)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Using the predict function")
RD <- (713 - 614)
TestData01 <- data.frame(RD)
predict(WinsReg, TestData01)

writeLines("\n :: Using the model directly")
W <- 80.881375 + (0.105766 * TestData01$RD)
W
'org_babel_R_eoe'
writeLines("\n :: Structure of the DF")
str(moneyball)

writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs scored")
RunsReg <- lm(RS ~ OBP + SLG, data = moneyball)
summary(RunsReg)
'org_babel_R_eoe'
writeLines("\n :: Regression model to predict runs allowed")
RunsAllowed <- lm(RA ~ OOBP + OSLG, data = moneyball)
summary(RunsAllowed)
'org_babel_R_eoe'
OBP <- 0.311; SLG <- 0.405
RSTest <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RSTest)
'org_babel_R_eoe'
OOBP <- 0.297; OSLG <- 0.370
RATest <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RATest)
'org_babel_R_eoe'
OBP <- 0.339; SLG <- 0.430
RS2002 <- data.frame(OBP, SLG)
predict(RunsReg, newdata = RS2002)
'org_babel_R_eoe'
OOBP <- 0.307; OSLG <- 0.373
RA2002 <- data.frame(OOBP, OSLG)
predict(RunsAllowed, newdata = RA2002)
'org_babel_R_eoe'
OBP <- c(0.338, 0.391, 0.369, 0.313, 0.361)
SLG <- c(0.540, 0.450, 0.374, 0.447, 0.500)
PlayerName <- c("Eric Chavez", "Jeremy Giambi", "Frank Menechino",
                "Greg Myers", "Carlos Pena")
Salary <- c(1400000, 1065000, 295000, 800000, 300000)

RSnewPlayers <- data.frame(PlayerName, OBP, SLG, Salary)
RSnewPlayers$RSPred <- predict(RunsReg, newdata = RSnewPlayers)
RSnewPlayers

writeLines("\n :: For the best players with the budget restriction:")
RSnewPlayers$Salary[2] + RSnewPlayers$Salary[5]
'org_babel_R_eoe'
teamRank = c(1, 2, 3, 3, 4, 4, 4, 4, 5, 5)
'org_babel_R_eoe'
wins2012 <- c(94, 88, 95, 88, 93, 94, 98, 97, 93, 94)
'org_babel_R_eoe'
wins2013 <- c(97, 97, 92, 93, 92, 96, 94, 96, 92, 90)
'org_babel_R_eoe'
writeLines("\n :: Correlation between teamRank and wins2012")
cor(teamRank, wins2012)
'org_babel_R_eoe'
writeLines("\n :: Correlation between teamRank and wins2013")
cor(teamRank, wins2013)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/NBA_train.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/NBA_test.csv")

fileName <- c("NBA_train.csv", "NBA_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read the data")
NBA <- read.table("../data/NBA_train.csv", sep = ",", header = TRUE)
str(NBA)
summary(NBA)
'org_babel_R_eoe'
writeLines("\n :: How many wins to make the playoffs?")
head(table(NBA$W, NBA$Playoffs), 15)
'org_babel_R_eoe'
writeLines("\n :: How many wins to make the playoffs?")
tail(table(NBA$W, NBA$Playoffs), 15)
'org_babel_R_eoe'
writeLines("\n ::Compute Points Difference")
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for wins")
WinsReg <- lm(W ~ PTSdiff, data = NBA)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for points scored")
PointsReg <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data = NBA)
summary(PointsReg)
'org_babel_R_eoe'
writeLines("\n :: Residuals:")
head(PointsReg$residuals, 20)

writeLines("\n :: Sum of Squared Errors:")
SSE <- sum(PointsReg$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Root mean squared error")
RMSE <- sqrt(SSE / nrow(NBA))
RMSE
'org_babel_R_eoe'
writeLines("\n :: Average number of points in a season")
mean(NBA$PTS)
'org_babel_R_eoe'
summary(PointsReg)
'org_babel_R_eoe'
PointsReg2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL +
                         BLK, data = NBA)
summary(PointsReg2)

PointsReg3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data
                 = NBA)
summary(PointsReg3)

PointsReg4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data =
                                                                    NBA)
summary(PointsReg4)
'org_babel_R_eoe'
writeLines("\n :: Compute SSE and RMSE for new model")
SSE_4 = sum(PointsReg4$residuals^2)
RMSE_4 = sqrt(SSE_4/nrow(NBA))
SSE_4
RMSE_4
'org_babel_R_eoe'
PointsReg2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL +
                         BLK, data = NBA)
summary(PointsReg2)
'org_babel_R_eoe'
PointsReg3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data
                 = NBA)
summary(PointsReg3)
'org_babel_R_eoe'
PointsReg4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data =
                                                                    NBA)
summary(PointsReg4)
'org_babel_R_eoe'
writeLines("\n :: Compute SSE and RMSE for new model")
SSE_4 <- sum(PointsReg4$residuals^2)
RMSE_4 <- sqrt(SSE_4/nrow(NBA))
SSE_4
RMSE_4
'org_babel_R_eoe'
writeLines("\n :: Read the data of the test data set")
NBA_test <- read.table("../data/NBA_test.csv", sep = ",", header = TRUE)
str(NBA_test)
summary(NBA_test)
'org_babel_R_eoe'
writeLines("\n :: Make predictions on test set")
PointsPredictions = predict(PointsReg4, newdata=NBA_test)
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((PointsPredictions - NBA_test$PTS)^2)
SST <- sum((mean(NBA$PTS) - NBA_test$PTS)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
writeLines("\n :: Compute the RMSE")
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
'org_babel_R_eoe'
writeLines("\n :: Compute the RMSE")
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
'org_babel_R_eoe'
writeLines("\n :: Compute the RMSE")
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)
test <- subset(climateChange, Year > 2006)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
summary(test)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
284 + 24
writeLines("\n :: Linear regression model for wins")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training$N2O, training$CFC.11)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for wins")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for wins")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
q()
n
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Optimizing the linear regression model for Climate Change")
tempReg3 <- step(tempReg)
summary(tempReg3)
'org_babel_R_eoe'
TempReg_test <- predict(Temp, newdata = test)
summary(TempReg_test)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((PredictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((predictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
q()
c
q()
n
