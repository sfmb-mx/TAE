library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}


dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
writeLines("         Selecting a variable")
WHO$Under15

writeLines("\n         Calculating the Mean of the variable Under15")
mean(WHO$Under15)

writeLines("\n         Calculating the Standard Deviation of Under15")
sd(WHO$Under15)

writeLines("\n         Summary of the Under15 variable")
summary(WHO$Under15)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}


dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)
print(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)
nrow(Outliers)
print(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

str(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("     Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

str(Outliers)
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("     Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

writeLines("     Str for the Outliers DF")
str(Outliers)
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}


dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
Outliers <- subset(WHO, GNI > 10000 & FertilityRate > 2.5)

writeLines("     Number of countries with GNI >10000 and Fertilityrate > 2.5")
nrow(Outliers)

writeLines("     Interested data for the Outliers DF")
Outliers[c("Country", "GNI", "FertilityRate")]
'org_babel_R_eoe'
mean(WHO$Over60, na.rm = TRUE)
'org_babel_R_eoe'
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
summary(WHO)
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
writeLines("        Summary for WHO DF")
summary(WHO)

writeLines("        Answer")
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
writeLines("        Summary for WHO DF")
summary(WHO)

writeLines("\n        Answer")
minOver60Country <- WHO[which.min(WHO$Over60), ]
minOver60Country$Country
'org_babel_R_eoe'
writeLines("        Summary for WHO DF")
summary(WHO)

writeLines("\n        Answer")
maxLR <- WHO[which.max(WHO$LiteracyRate), ]
maxLR$Country
'org_babel_R_eoe'
writeLines("\n        Answer")
maxLR <- WHO[which.max(WHO$LiteracyRate), ]
maxLR$Country
'org_babel_R_eoe'
library(parallel)
rm(list = ls())                         # Remove all workspace data

if(!file.exists("../data")) {
        dir.create("../data")
}


dataFile <- "../data/WHO.csv"

if(!file.exists(dataFile)) {
        fileUrl <- "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/WHO.csv"
        download.file(fileUrl, destfile = dataFile, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
print("******* Loading data into WHO dataframe *******")
WHO <- read.table(dataFile, sep = ",", header = TRUE)

print("******* Initial analysis of data WHO *******")
str(WHO)

print("******* Summary data of the WHO datafram *******")
summary(WHO)

print("******* Names of the dataframe *******")
names(WHO)

print("******* class of the dataframe *******")
class(WHO)

print("******* Dimension of the dataframe *******")
dim(WHO)

print("******* Head dataframe *******")
head(WHO)

print("******* Any NA in the dataframe *******")
anyNA(WHO)
'org_babel_R_eoe'
MexicoOH <- WHO[WHO$Country == 'Mexico', ]
str(MexicoOH)
'org_babel_R_eoe'
WHO_Europe <- subset(WHO, Region == 'Europe')
str(WHO_Europe)
print(head(WHO_Europe))
'org_babel_R_eoe'
q()
n
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/mvtWeek1.csv"
fileName <- "mvtWeek1.csv"

dataPath <- "../data"
filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/mvtWeek1.csv"
fileName <- "mvtWeek1.csv"

dataPath <- "../data"
filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
        list.files("../data")
        dateDownloaded <- date()
}
'org_babel_R_eoe'
writeLines("    Loading data into mvt dataframe")
mvt <- read.table(filePath, sep = ",", header = TRUE)

writeLines("    Initial analysis of data mvt")
str(mvt)

writeLines("    Summary data of the mvt dataframe")
summary(mvt)

writeLines("    Names of the dataframe")
names(mvt)

writeLines("    Class of the data set in memory")
class(mvt)

writeLines("    Dimension of the dataframe")
dim(mvt)

writeLines("    Head of the DF")
head(mvt)

writeLines("    Any NA in the dataframe")
anyNA(mvt)
'org_babel_R_eoe'
writeLines("    Loading data into mvt dataframe")
mvt <- read.table(filePath, sep = ",", header = TRUE)

writeLines("    Initial analysis of data mvt")
nrow(mvt)
str(mvt)

writeLines("    Summary data of the mvt dataframe")
summary(mvt)

writeLines("    Names of the dataframe")
names(mvt)

writeLines("    Class of the data set in memory")
class(mvt)

writeLines("    Dimension of the dataframe")
dim(mvt)

writeLines("    Head of the DF")
head(mvt)

writeLines("    Any NA in the dataframe")
anyNA(mvt)
'org_babel_R_eoe'
writeLines("    Loading data into mvt dataframe")
mvt <- read.table(filePath, sep = ",", header = TRUE)

writeLines("    Initial analysis of data mvt")
nrow(mvt)
str(mvt)
'org_babel_R_eoe'
writeLines("    Summary data of the mvt dataframe")
summary(mvt)

writeLines("    Names of the dataframe")
names(mvt)

writeLines("    Dimension of the dataframe")
dim(mvt)

writeLines("    Any NA in the dataframe")
anyNA(mvt)
'org_babel_R_eoe'
writeLines("    Dimension of the dataframe")
dim(mvt)

writeLines("    Names of the dataframe")
names(mvt)

writeLines("    Any NA in the dataframe")
anyNA(mvt)
'org_babel_R_eoe'
maxID <- mvt[which.max(mvt$ID), ]
maxID$ID
'org_babel_R_eoe'
maxID <- mvt[which.max(mvt$ID), ]
maxID
'org_babel_R_eoe'
which.max(mvt$ID)
maxID <- mvt[which.max(mvt$ID), ]
maxID
'org_babel_R_eoe'
maxID <- mvt[which.max(mvt$ID), ]
maxID$ID
'org_babel_R_eoe'
minBeat <- mvt[which.min(mvt$Beat), ]
minBeat$Beat
'org_babel_R_eoe'
TArrest <- subset(mvt, Arrest == TRUE)
nrow(TArrest)
'org_babel_R_eoe'
nrow(subset(mvt, LocationDescription == "ALLEY"))
'org_babel_R_eoe'
nrow(subset(mvt, LocationDescription == "ALLEY"))
table(mvt$LocationDescription)
'org_babel_R_eoe'
nrow(subset(mvt, LocationDescription == "ALLEY"))
'org_babel_R_eoe'
head(mvt$Date, 1)
'org_babel_R_eoe'
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
'org_babel_R_eoe'
DateConvert <- as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
class(DateConvert)
'org_babel_R_eoe'
DateConvert <- as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
class(DateConvert)

summary(DateConvert)
'org_babel_R_eoe'
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
'org_babel_R_eoe'
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
'org_babel_R_eoe'
mvt$Date = DateConvert
'org_babel_R_eoe'
table(mvt$Date)
'org_babel_R_eoe'
names(mvt)
table(mvt$Month, mvt$Domestic)
'org_babel_R_eoe'
names(mvt)
table(mvt$Month, mvt$Domestic)

minDomestic <- mvt[which.min(mvt$Domestic), ]
minDomestic$Month
'org_babel_R_eoe'
names(mvt)
table(mvt$Month, mvt$Domestic)

minDomestic <- mvt[which.min(mvt$Domestic == TRUE), ]
minDomestic$Month
'org_babel_R_eoe'
names(mvt)
table(mvt$Month, mvt$Domestic)

minDomestic <- mvt[which.min(mvt$Domestic == TRUE), ]
minDomestic
'org_babel_R_eoe'
names(mvt)
class(mvt$Domestic)
table(mvt$Month, mvt$Domestic)

minDomestic <- mvt[which.min(mvt$Domestic == TRUE), ]
minDomestic
'org_babel_R_eoe'
names(mvt)
head(mvt)
table(mvt$Month)
'org_babel_R_eoe'
names(mvt)
head(mvt, 3)
table(mvt$Month)
'org_babel_R_eoe'
head(mvt, 3)
CarTheftsByMonth <- table(mvt$Month)
'org_babel_R_eoe'
head(mvt, 3)
table(mvt$Month)
'org_babel_R_eoe'
head(mvt, 3)
table(mvt$Weekday)
'org_babel_R_eoe'
table(mvt$Month, mvt$Arrest)
'org_babel_R_eoe'
table(mvt$Month, mvt$Arrest)
table(mvt$Arrest,mvt$Month)
'org_babel_R_eoe'
table(mvt$Month, mvt$Arrest)
'org_babel_R_eoe'
q()
n
q()
n
