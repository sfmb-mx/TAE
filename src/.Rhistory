'org_babel_R_eoe'
DateConvert <- as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
class(DateConvert)

summary(DateConvert)
'org_babel_R_eoe'
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
'org_babel_R_eoe'
mvt$Date = DateConvert
'org_babel_R_eoe'
head(mvt, 3)
table(mvt$Month)
'org_babel_R_eoe'
head(mvt, 3)
table(mvt$Weekday)
'org_babel_R_eoe'
table(mvt$Month, mvt$Arrest)
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)

writeLines("\n        Proportion of vehicle thefts in 2001:")
print(2152 / 18517)
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)

writeLines("\n        Proportion of vehicle thefts in 2001:")
print(2152 / (2152 + 18517))
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)

writeLines("\n        Proportion of vehicle thefts in 2001:")
print(2152 / (2152 + 18517))
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)

writeLines("\n        Proportion of vehicle thefts in 2007:")
print(1212 / (13068 + 1212))
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)

writeLines("\n        Proportion of vehicle thefts in 2012:")
print(1212 / (13068 + 1212))
'org_babel_R_eoe'
library(lubridate)
mvt$Year <- year(mvt$Date)
table(mvt$Year, mvt$Arrest)

writeLines("\n        Proportion of vehicle thefts in 2012:")
print(550 / (13542 + 550))
'org_babel_R_eoe'
sort(table(mvt$LocationDescription))
'org_babel_R_eoe'
sort(table(mvt$LocationDescription), decreasing = FALSE)
'org_babel_R_eoe'
sort(table(mvt$LocationDescription), decreasing = TRUE)
'org_babel_R_eoe'
head(sort(table(mvt$LocationDescription), decreasing = TRUE))
'org_babel_R_eoe'
head(sort(table(mvt$LocationDescription), decreasing = TRUE), 10)
'org_babel_R_eoe'
head(sort(table(mvt$LocationDescription), decreasing = TRUE), 10)
'org_babel_R_eoe'
head(sort(table(mvt$LocationDescription), decreasing = TRUE), 6)
'org_babel_R_eoe'
names(mvt)
Top5 <- subset(mvt, LocationDescription == ("STREET" | "PARKING LOT/GARAGE(NON.RESID.)" | "ALLEY" | "GAS STATION" | "DRIVEWAY - RESIDENTIAL"))
'org_babel_R_eoe'
Top5 <- subset(mvt, LocationDescription == "STREET" | LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" | LocationDescription == "ALLEY" | LocationDescription == "GAS STATION" | LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5
names(mvt)
Top5 <- subset(mvt, LocationDescription == "STREET" |
                    LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
                    LocationDescription == "ALLEY" |
                    LocationDescription == "GAS STATION" |
                    LocationDescription == "DRIVEWAY - RESIDENTIAL")
head(Top5)
'org_babel_R_eoe'
Top5 <- subset(mvt, LocationDescription == "STREET" |
                    LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
                    LocationDescription == "ALLEY" |
                    LocationDescription == "GAS STATION" |
                    LocationDescription == "DRIVEWAY - RESIDENTIAL")
head(Top5)
'org_babel_R_eoe'
Top5 <- subset(mvt, LocationDescription == "STREET" |
                    LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
                    LocationDescription == "ALLEY" |
                    LocationDescription == "GAS STATION" |
                    LocationDescription == "DRIVEWAY - RESIDENTIAL")
head(Top5, 25)
'org_babel_R_eoe'
Top5 <- subset(mvt, LocationDescription == "STREET" |
                    LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
                    LocationDescription == "ALLEY" |
                    LocationDescription == "GAS STATION" |
                    LocationDescription == "DRIVEWAY - RESIDENTIAL")
head(Top5, 5)
'org_babel_R_eoe'
Top5 <- subset(mvt, LocationDescription == "STREET" |
                    LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
                    LocationDescription == "ALLEY" |
                    LocationDescription == "GAS STATION" |
                    LocationDescription == "DRIVEWAY - RESIDENTIAL")
head(Top5, 5)
writeLines("        The number of observations in Top5 are:")
print(nrow(Top5))
'org_babel_R_eoe'
TopLocations = c("STREET", "PARKING LOT/GARAGE(NON.RESID.)", "ALLEY",
                 "GAS STATION", "DRIVEWAY - RESIDENTIAL")
Top5 = subset(mvt, LocationDescription %in% TopLocations)
'org_babel_R_eoe'
TopLocations <- c("STREET", "PARKING LOT/GARAGE(NON.RESID.)", "ALLEY",
                 "GAS STATION", "DRIVEWAY - RESIDENTIAL")
Top5 <- subset(mvt, LocationDescription %in% TopLocations)
head(Top5, 5)
writeLines("        The number of observations in Top5 are:")
print(nrow(Top5))
'org_babel_R_eoe'
Top5$LocationDescription = factor(Top5$LocationDescription)
'org_babel_R_eoe'
str(Top5)
'org_babel_R_eoe'
str(Top5)
table(Top5)
'org_babel_R_eoe'
str(Top5)
table(Top5$locationdescription)
'org_babel_R_eoe'
str(Top5)
table(Top5$locationdescription)
'org_babel_R_eoe'
table(Top5$locationdescription)
'org_babel_R_eoe'
str(Top5)
'org_babel_R_eoe'
table(Top5$locationdescription, Top5$Arrest)
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)
writeLines("        The highest arrest rate is located at:")
print(11595 / (144969 + 11595))
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)
writeLines("        The highest arrest rate is located at:")

print(249 / (2059 + 249))
print(132 / (1543 + 132))
print(439 / (1672 + 439))
print(1603  / (13249 + 1603))
print(11595 / (144969 + 11595))
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)

print(249 / (2059 + 249))
print(132 / (1543 + 132))
print(439 / (1672 + 439))
print(11595 / (144969 + 11595))

writeLines("        The highest arrest rate is located at:")
print(1603  / (13249 + 1603))
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)

print(249 / (2059 + 249))
print(132 / (1543 + 132))
print(439 / (1672 + 439))
print(1603  / (13249 + 1603))
print(11595 / (144969 + 11595))

writeLines("        The highest arrest rate is located at:")
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)

print(249 / (2059 + 249))
print(132 / (1543 + 132))
print(439 / (1672 + 439))
print(1603  / (13249 + 1603))
print(11595 / (144969 + 11595))

writeLines("        The highest arrest rate is located at:")
print(439 / (1672 + 439))
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)

print(249 / (2059 + 249))                  # ALLEY
print(132 / (1543 + 132))                  # DRIVEWAY - RESIDENTIAL
print(439 / (1672 + 439))                  # GAS STATION
print(1603  / (13249 + 1603))              # PARKING LOT/GARAGE(NON.RESID.)
print(11595 / (144969 + 11595))            # STREET

writeLines("        The highest arrest rate is located at: GAS STATION")
answer <- paste("with a", 439 / (1672 + 439), "rate.", sep = " ")
print(439 / (1672 + 439))
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)

print(249 / (2059 + 249))                  # ALLEY
print(132 / (1543 + 132))                  # DRIVEWAY - RESIDENTIAL
print(439 / (1672 + 439))                  # GAS STATION
print(1603  / (13249 + 1603))              # PARKING LOT/GARAGE(NON.RESID.)
print(11595 / (144969 + 11595))            # STREET

writeLines("        The highest arrest rate is located at: GAS STATION")
answer <- paste("with a", 439 / (1672 + 439), "rate.", sep = " ")
print(answer)
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Arrest)

print(249 / (2059 + 249))                  # ALLEY
print(132 / (1543 + 132))                  # DRIVEWAY - RESIDENTIAL
print(439 / (1672 + 439))                  # GAS STATION
print(1603  / (13249 + 1603))              # PARKING LOT/GARAGE(NON.RESID.)
print(11595 / (144969 + 11595))            # STREET

writeLines("The highest arrest rate is located at: GAS STATION")
answer <- paste("with a", 439 / (1672 + 439), "rate.", sep = " ")
print(answer)
'org_babel_R_eoe'
names(Top5)
table(Top5$Weekday, Top5$LocationDescription)
'org_babel_R_eoe'
table(Top5$Weekday, Top5$LocationDescription)
table(Top5$LocationDescription, Top5$Weekday)
'org_babel_R_eoe'
table(Top5$LocationDescription, Top5$Weekday)
'org_babel_R_eoe'
table(Top5$Weekday, Top5$LocationDescription)
table(Top5$LocationDescription, Top5$Weekday)
'org_babel_R_eoe'
table(Top5$Weekday, Top5$LocationDescription)
'org_babel_R_eoe'
table(Top5$Weekday, Top5$LocationDescription)
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/IBMStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/GEStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/ProcterGambleStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CocaColaStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/BoeingStock.csv")

fileName <- c("IBMStock.csv", "GEStock.csv", "ProcterGambleStock.csv", "CocaColaStock.csv", "BoeingStock.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
rm(list = ls())                         # Remove all workspace data
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/IBMStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/GEStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/ProcterGambleStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CocaColaStock.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/BoeingStock.csv")

fileName <- c("IBMStock.csv", "GEStock.csv", "ProcterGambleStock.csv", "CocaColaStock.csv", "BoeingStock.csv")

dataPath <- "../data"

for(i in 1:5) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
                list.files("../data")
        }
}
'org_babel_R_eoe'
filePath[1]
filePath[2]
filePath
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)

writeLines("    Initial analysis of data frames")
nrow(IBM)
str(IBM)

nrow(GE)
str(GE)

nrow(ProcterGamble)
str(ProcterGamble)

nrow(CocaCola)
str(CocaCola)

nrow(Boeing)
str(Boeing)
'org_babel_R_eoe'
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)

writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
'org_babel_R_eoe'
writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
head(IBM$Date)
head(IBM$Year)
class(IBM$Year)
head(sort(IBM$Year))
anyNA(IBM$Year)
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
summary(IBM$Date)
'org_babel_R_eoe'
names(IBM)
summary(IBM$StockPrice)
'org_babel_R_eoe'
names(IBM)
mean(IBM$StockPrice)
summary(IBM$StockPrice)
'org_babel_R_eoe'
names(IBM)
mean(IBM$StockPrice)
'org_babel_R_eoe'
names(IBM)

writeLines("The mean is:")
mean(IBM$StockPrice)
'org_babel_R_eoe'
summary(GE)
'org_babel_R_eoe'
summary(GE$StockPrice)
'org_babel_R_eoe'
summary(CocaCola$StockPrice)
'org_babel_R_eoe'
summary(Boeing$StockPrice)
'org_babel_R_eoe'
sd(ProcterGamble$StockPrice)
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
'org_babel_R_eoe'
writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
q()
n
writeLines("    Loading data into their data frames.")
IBM <- read.table("../data/IBMStock.csv", sep = ",", header = TRUE)
GE <- read.table("../data/GEStock.csv", sep = ",", header = TRUE)
ProcterGamble <- read.table("../data/ProcterGambleStock.csv", sep = ",", header = TRUE)
CocaCola <- read.table("../data/CocaColaStock.csv", sep = ",", header = TRUE)
Boeing <- read.table("../data/BoeingStock.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
'org_babel_R_eoe'
writeLines("    Initial analysis of data frames")
dim(IBM)
str(IBM)

dim(GE)
str(GE)

dim(ProcterGamble)
str(ProcterGamble)

dim(CocaCola)
str(CocaCola)

dim(Boeing)
str(Boeing)
'org_babel_R_eoe'
library(lubridate)
head(sort(year(IBM$Date)))
head(sort(year(GE$Date)))
head(sort(year(ProcterGamble$Date)))
head(sort(year(CocaCola$Date)))
head(sort(year(Boeing$Date)))

summary(IBM$Date)
summary(GE$Date)
summary(ProcterGamble$Date)
summary(CocaCola$Date)
summary(Boeing$Date)
'org_babel_R_eoe'
tapply(IBM$Stockprice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)
tapply(IBM$Stockprice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)
mean(IBM$StockPrice)
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)

print("The over mean of the IBI stock price is:")
mean(IBM$StockPrice)
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(IBM)

print("The over mean of the IBI stock price is:")
mean(IBM$StockPrice)
print("Mean stock price of IBM by month:")
tapply(IBM$StockPrice, months(IBM$Date), mean)
'org_babel_R_eoe'
names(GE); names(CocaCola)

writeLines("\nThe over mean of the GE stock price is:")
mean(GE$StockPrice)

writeLines("\nThe over mean of the Coca-Cola stock price is:")
mean(CocaCola$StockPrice)

writeLines("\nMean stock price of GE by month:")
tapply(GE$StockPrice, months(GE$Date), mean)

writeLines("\nMean stock price of Coca-Cola  by month:")
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)
'org_babel_R_eoe'
ls()

writeLines("\nThe over mean of the Boeing stock price is:")
mean(Boeing$StockPrice)

writeLines("\nThe over mean of the Coca-Cola stock price is:")
mean(CocaCola$StockPrice)

writeLines("\nThe over mean of the GE stock price is:")
mean(GE$StockPrice)

writeLines("\nThe over mean of the IBM stock price is:")
mean(IBM$StockPrice)

writeLines("\nThe over mean of the Procter&Gamble stock price is:")
mean(ProcterGamble$StockPrice)

writeLines("\n---------\n")

writeLines("\nMean stock price of Boeing  by month:")
tapply(Boeing$StockPrice, months(Boeing$Date), mean)

writeLines("\nMean stock price of Coca-Cola  by month:")
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)

writeLines("\nMean stock price of GE by month:")
tapply(GE$StockPrice, months(GE$Date), mean)

writeLines("\nMean stock price of IBM  by month:")
tapply(IBM$StockPrice, months(IBM$Date), mean)

writeLines("\nMean stock price of ProcterGamble  by month:")
tapply(ProcterGamble$StockPrice, months(ProcterGamble$Date), mean)
'org_babel_R_eoe'
writeLines("\nThe over mean of the Boeing stock price is:")
mean(Boeing$StockPrice)

writeLines("\nThe over mean of the Coca-Cola stock price is:")
mean(CocaCola$StockPrice)

writeLines("\nThe over mean of the GE stock price is:")
mean(GE$StockPrice)

writeLines("\nThe over mean of the IBM stock price is:")
mean(IBM$StockPrice)

writeLines("\nThe over mean of the Procter&Gamble stock price is:")
mean(ProcterGamble$StockPrice)

writeLines("\n---------\n")

writeLines("\nMean stock price of Boeing  by month:")
tapply(Boeing$StockPrice, months(Boeing$Date), mean)

writeLines("\nMean stock price of Coca-Cola  by month:")
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)

writeLines("\nMean stock price of GE by month:")
tapply(GE$StockPrice, months(GE$Date), mean)

writeLines("\nMean stock price of IBM  by month:")
tapply(IBM$StockPrice, months(IBM$Date), mean)

writeLines("\nMean stock price of ProcterGamble  by month:")
tapply(ProcterGamble$StockPrice, months(ProcterGamble$Date), mean)
'org_babel_R_eoe'
q()
n
