writeLines("\n :: Correlation between teamRank and wins2012")
cor(teamRank, wins2012)
'org_babel_R_eoe'
writeLines("\n :: Correlation between teamRank and wins2013")
cor(teamRank, wins2013)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/NBA_train.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/NBA_test.csv")

fileName <- c("NBA_train.csv", "NBA_test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read the data")
NBA <- read.table("../data/NBA_train.csv", sep = ",", header = TRUE)
str(NBA)
summary(NBA)
'org_babel_R_eoe'
writeLines("\n :: How many wins to make the playoffs?")
head(table(NBA$W, NBA$Playoffs), 15)
'org_babel_R_eoe'
writeLines("\n :: How many wins to make the playoffs?")
tail(table(NBA$W, NBA$Playoffs), 15)
'org_babel_R_eoe'
writeLines("\n ::Compute Points Difference")
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for wins")
WinsReg <- lm(W ~ PTSdiff, data = NBA)
summary(WinsReg)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for points scored")
PointsReg <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data = NBA)
summary(PointsReg)
'org_babel_R_eoe'
writeLines("\n :: Residuals:")
head(PointsReg$residuals, 20)

writeLines("\n :: Sum of Squared Errors:")
SSE <- sum(PointsReg$residuals^2)
SSE
'org_babel_R_eoe'
writeLines("\n :: Root mean squared error")
RMSE <- sqrt(SSE / nrow(NBA))
RMSE
'org_babel_R_eoe'
writeLines("\n :: Average number of points in a season")
mean(NBA$PTS)
'org_babel_R_eoe'
summary(PointsReg)
'org_babel_R_eoe'
PointsReg2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL +
                         BLK, data = NBA)
summary(PointsReg2)

PointsReg3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data
                 = NBA)
summary(PointsReg3)

PointsReg4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data =
                                                                    NBA)
summary(PointsReg4)
'org_babel_R_eoe'
writeLines("\n :: Compute SSE and RMSE for new model")
SSE_4 = sum(PointsReg4$residuals^2)
RMSE_4 = sqrt(SSE_4/nrow(NBA))
SSE_4
RMSE_4
'org_babel_R_eoe'
PointsReg2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL +
                         BLK, data = NBA)
summary(PointsReg2)
'org_babel_R_eoe'
PointsReg3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data
                 = NBA)
summary(PointsReg3)
'org_babel_R_eoe'
PointsReg4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data =
                                                                    NBA)
summary(PointsReg4)
'org_babel_R_eoe'
writeLines("\n :: Compute SSE and RMSE for new model")
SSE_4 <- sum(PointsReg4$residuals^2)
RMSE_4 <- sqrt(SSE_4/nrow(NBA))
SSE_4
RMSE_4
'org_babel_R_eoe'
writeLines("\n :: Read the data of the test data set")
NBA_test <- read.table("../data/NBA_test.csv", sep = ",", header = TRUE)
str(NBA_test)
summary(NBA_test)
'org_babel_R_eoe'
writeLines("\n :: Make predictions on test set")
PointsPredictions = predict(PointsReg4, newdata=NBA_test)
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((PointsPredictions - NBA_test$PTS)^2)
SST <- sum((mean(NBA$PTS) - NBA_test$PTS)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
writeLines("\n :: Compute the RMSE")
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
'org_babel_R_eoe'
writeLines("\n :: Compute the RMSE")
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
'org_babel_R_eoe'
writeLines("\n :: Compute the RMSE")
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)
test <- subset(climateChange, Year > 2006)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
summary(test)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
284 + 24
writeLines("\n :: Linear regression model for wins")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training$N2O, training$CFC.11)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for wins")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for wins")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
q()
n
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Optimizing the linear regression model for Climate Change")
tempReg3 <- step(tempReg)
summary(tempReg3)
'org_babel_R_eoe'
TempReg_test <- predict(Temp, newdata = test)
summary(TempReg_test)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((PredictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((predictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
q()
c
q()
n
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Optimizing the linear regression model for Climate Change")
tempReg3 <- step(tempReg)
summary(tempReg3)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((predictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/pisa2009train.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/pisa2009test.csv")

fileName <- c("pisa2009train.csv", "pisa2009test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read the training data set")
pisaTrain <- read.table("../data/pisa2009train.csv", sep = ",", header = TRUE)
str(pisaTrain)
summary(pisaTrain)

writeLines("\n\n :: Read the test data set: DO NOT SEE THE DATA!")
pisaTest <- read.table("../data/pisa2009test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("\n :: Number of students in the training data set")
nrow(pisaTrain)
'org_babel_R_eoe'
tapply(pisaTrain$readingScore, pisaTrain$male, mean)
'org_babel_R_eoe'
writeLines("\n :: any NA in the features")
summary(pisaTrain)
'org_babel_R_eoe'
writeLines("\n :: any NA in the features")
summary(pisaTrain)
'org_babel_R_eoe'
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
'org_babel_R_eoe'
writeLines("\n :: Omiting the non complete observations")
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
'org_babel_R_eoe'
writeLines("\n :: Number of observations in the training set")
nrow(pisaTrain)
'org_babel_R_eoe'
writeLines("\n :: Number of observations in the testing set")
nrow(pisaTest)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Optimizing the linear regression model for Climate Change")
tempReg3 <- step(tempReg)
summary(tempReg3)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((predictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/pisa2009train.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/pisa2009test.csv")

fileName <- c("pisa2009train.csv", "pisa2009test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read the training data set")
pisaTrain <- read.table("../data/pisa2009train.csv", sep = ",", header = TRUE)
str(pisaTrain)
summary(pisaTrain)

writeLines("\n\n :: Read the test data set: DO NOT SEE THE DATA!")
pisaTest <- read.table("../data/pisa2009test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("\n :: Number of students in the training data set")
nrow(pisaTrain)
'org_babel_R_eoe'
tapply(pisaTrain$readingScore, pisaTrain$male, mean)
'org_babel_R_eoe'
writeLines("\n :: any NA in the features")
summary(pisaTrain)
'org_babel_R_eoe'
writeLines("\n :: Omiting the non complete observations")
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
'org_babel_R_eoe'
writeLines("\n :: Number of observations in the training set")
nrow(pisaTrain)
'org_babel_R_eoe'
writeLines("\n :: Number of observations in the testing set")
nrow(pisaTest)
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/climate_change.csv")

fileName <- c("climate_change.csv")

dataPath <- "../data"

filePath <- paste(dataPath, fileName, sep = "/")

if(!file.exists(filePath)) {
        download.file(fileUrl, destfile = filePath, method = "curl")
}

list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read in data")
climateChange <- read.table("../data/climate_change.csv", sep = ",", header = TRUE)
str(climateChange)
summary(climateChange)
'org_babel_R_eoe'
training <- subset(climateChange, Year <= 2006)

writeLines("\n :: Exploratory data analysis for the training dataframe")
str(training)
summary(training)
'org_babel_R_eoe'
test <- subset(climateChange, Year > 2006)
str(test)
summary(test)
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg <- lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI +
                      Aerosols, data = training)
summary(tempReg)
'org_babel_R_eoe'
cor(training, use="complete.obs")
'org_babel_R_eoe'
writeLines("\n :: Linear regression model for Climate Change")
tempReg2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = training)
summary(tempReg2)
'org_babel_R_eoe'
writeLines("\n :: Optimizing the linear regression model for Climate Change")
tempReg3 <- step(tempReg)
summary(tempReg3)
'org_babel_R_eoe'
writeLines("\n :: Make test set predictions")
predictTest <- predict(tempReg3, newdata = test)
predictTest
'org_babel_R_eoe'
writeLines("\n :: Compute out-of-sample R^2")
SSE <- sum((predictTest - test$Temp)^2)
SST <- sum((mean(training$Temp) - test$Temp)^2)
R2 <- 1 - (SSE/SST)
R2
'org_babel_R_eoe'
library(parallel)

if(!file.exists("../data")) {
        dir.create("../data")
}

fileUrl <-
        c("https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/pisa2009train.csv", "https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/pisa2009test.csv")

fileName <- c("pisa2009train.csv", "pisa2009test.csv")

dataPath <- "../data"

for(i in 1:2) {
        filePath <- paste(dataPath, fileName[i], sep = "/")

        if(!file.exists(filePath)) {
                download.file(fileUrl[i], destfile = filePath, method = "curl")
        }
}
list.files("../data")
'org_babel_R_eoe'
writeLines("\n :: Read the training data set")
pisaTrain <- read.table("../data/pisa2009train.csv", sep = ",", header = TRUE)
str(pisaTrain)
summary(pisaTrain)

writeLines("\n\n :: Read the test data set: DO NOT SEE THE DATA!")
pisaTest <- read.table("../data/pisa2009test.csv", sep = ",", header = TRUE)
'org_babel_R_eoe'
writeLines("\n :: Number of students in the training data set")
nrow(pisaTrain)
'org_babel_R_eoe'
tapply(pisaTrain$readingScore, pisaTrain$male, mean)
'org_babel_R_eoe'
writeLines("\n :: any NA in the features")
summary(pisaTrain)
'org_babel_R_eoe'
writeLines("\n :: Omiting the non complete observations")
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
'org_babel_R_eoe'
writeLines("\n :: Number of observations in the training set")
nrow(pisaTrain)
'org_babel_R_eoe'
writeLines("\n :: Number of observations in the testing set")
nrow(pisaTest)
'org_babel_R_eoe'
class(pisaTrain$grade)
class(pisaTrain$male)
class(pisaTrain$raceeth)
str(pisaTrain$raceeth)
'org_babel_R_eoe'
class(pisaTrain$raceeth)
str(pisaTrain$raceeth)
summary(pisaTrain$raceeth)
'org_babel_R_eoe'
q()
n
